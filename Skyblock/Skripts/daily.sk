options:
	daily-wait-time: 12 hours
	streak-timeout: 24 hours
	tag: &e&lSKYBLOCK &7Â¬&f

function dailywait(p:player, t:text, time:timespan):
	set {_uuid} to uuid of {_p}
	if {_t} is "none":
		set {daily.waited-time::%{_uuid}%} to false
		wait {@daily-wait-time}
		set {daily.waited-time::%{_uuid}%} to true
		wait {@streak-timeout}
		clear {streak.multiplier.cash::%{_uuid}%}
		clear {streak.multiplier.gem::%{_uuid}%}
		set {streaks::%{_uuid}%} to 0
		message "{@tag} You can now claim your daily reward!" to {_p}
	if {_t} is "pause":
		set {daily.waited-time::%{_uuid}%} to true
	if {_t} is "unpause":
		set {daily.waited-time::%{_uuid}%} to false
		wait {_time}
		set {daily.waited-time::%{_uuid}%} to true	


function daily_menu(p: player, t: text):
	if {_t} is "unlinked":
		create a gui with dispenser inventory named "&8Daily Rewards":
			format gui slot 0, 1, 2, 3, 5, 6, 7, and 8 with red glass pane named "&7" 
			format gui slot 4 with chain named "&cPlease link your account!" with lore "" and "&7To link your account, please do /link" and "&7and follow the given instructions to" and "&7begin claming your daily rewards!":
				close inventory for {_p}
				make {_p} execute "/link"	
		open gui last gui to {_p}
	if {_t} is "linked":
		set {_uuid} to uuid of {_p}
		create a gui with virtual chest inventory with 3 rows named "&8Daily Rewards":
			format gui slot 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 17, 18, 19, 20, 21, 22, 23, 24, 25, and 26 with black glass pane named "&0" 
			format gui slot 10, 12, 14, and 16 with gray glass pane named "&7" 
			format gui slot 11 with chain named "&aYour account is linked! &f(%{discord.ingame-name.formatted::%{_uuid}%}%)" with lore "" and "&7By linking your account, you've unlocked" and "&7access to daily rewards, you can now" and "&7claim a reward every 12 hours & start" and "&7streaks for extra goodies!" 
			if {daily.waited-time::%{_uuid}%} isn't set:
				set {daily.waited-time::%{_uuid}%} to true
			if {streaks::%{_uuid}%} isn't set:
				set {streaks::%{_uuid}%} to 0
			if {streak.multiplier.cash::%{_uuid}%} isn't set:
				set {streak.multiplier.cash::%{_uuid}%} to 1
			if {streak.multiplier.gem::%{_uuid}%} isn't set:
				set {streak.multiplier.gem::%{_uuid}%} to 1
			if {daily.waited-time::%{_uuid}%} is false:
				set {_chest} to minecart
				set {_waited} to difference between {last-use::%{_uuid}%} and now
				set {_time-left} to difference between {_waited} and {@daily-wait-time}
				format gui slot 13 with {_chest} named "&e&lDAILY REWARD" with lore "" and "&fYou have recently claimed this" and "&freward!" and "" and "&fCheck back in &e%{_time-left}%" and "" and "&7&o(( This reward is on cooldown! ))":
					if {_waited} is less than {@daily-wait-time}:
						message "{@tag} Sorry, you must wait &e%{_time-left}%&f to claim your next daily reward."
						close {_p}'s inventory
						stop
					set {last-use::%{_uuid}%} to now
					#add 1 to {streaks::%{_uuid}%}
					dailywait({_p}, "none", {last-use::%{_uuid}%})
					daily_menu(player, "linked")
				format gui slot 15 with campfire named "&e&lDAILY STREAKS" with lore "" and "&fCurrent Streak: %{streaks::%{_uuid}%}%" and "" and "&fStreaks count how many &econsecutive days" and "&fyou collect your daily rewards. Claim them" and "&feach day to begin a streak and start" and "&fearning some &ebonus rewards&f!" and "" and "&e&lBONUS REWARDS" and "" and "&e$%regex({streak.cash.amount::%{_uuid}%})% &f(+%{streak.multiplier.cash::%{_uuid}%}-1%%% Multiplier | +0.15%% / Day)" and "&e%regex({streak.gem.amount::%{_uuid}%})% Gems &f(+%{streak.multiplier.gem::%{_uuid}%}-1%%% Multiplier | +0.30%% / Day)" 
			if {daily.waited-time::%{_uuid}%} is true:
				set {_chest} to minecart with chest
				set {streak.cash.amount::%{_uuid}%} to (1000 * {streak.multiplier.cash::%{_uuid}%})
				set {streak.gem.amount::%{_uuid}%} to (20 * {streak.multiplier.gem::%{_uuid}%})
				format gui slot 13 with {_chest} named "&e&lDAILY REWARD" with lore "" and "&fClaim a &eDaily Crate Key&r &fand redeem" and "&fit at /warp crates for a chance at" and "&fwinning some free loot." and "" and "&7&o(( Click to Claim Now ))":
					set {_waited} to difference between {last-use::%{_uuid}%} and now
					set {last-use::%{_uuid}%} to now
					add 1 to {streaks::%{_uuid}%}
					add 0.05 to {streak.multiplier.cash::%{_uuid}%}
					add 0.10 to {streak.multiplier.gem::%{_uuid}%}
					make console execute "/crate give %{_p}% daily 1"
					set {streak.cash.amount::%{_uuid}%} to (1000 * {streak.multiplier.cash::%{_uuid}%})
					set {streak.gem.amount::%{_uuid}%} to (20 * {streak.multiplier.gem::%{_uuid}%})
					make console execute "/eco give %{_p}% %{streak.cash.amount::%{_uuid}%}%"
					make console execute "/gem give %{_p}% %{streak.gem.amount::%{_uuid}%}%"
					dailywait({_p}, "none", {last-use::%{_uuid}%})
					daily_menu(player, "linked")			
				format gui slot 15 with campfire named "&e&lDAILY STREAKS" with lore "" and "&fCurrent Streak: %{streaks::%{_uuid}%}%" and "" and "&fStreaks count how many &econsecutive days" and "&fyou collect your daily rewards. Claim them" and "&feach day to begin a streak and start" and "&fearning some &ebonus rewards&f!" and "" and "&e&lBONUS REWARDS" and "" and "&e$%regex({streak.cash.amount::%{_uuid}%})% &f(+%{streak.multiplier.cash::%{_uuid}%}-1%%% Multiplier | +0.15%% / Day)" and "&e%regex({streak.gem.amount::%{_uuid}%})% Gems &f(%{streak.multiplier.gem::%{_uuid}%}-1%%% Multiplier | +0.30%% / Day)" 
			if {daily.waited-time::%{_uuid}%} is "PAUSED":
				set {_chest} to minecart with furnace
				set {_fire} to soul campfire
				format gui slot 13 with {_chest} named "&e&lDAILY REWARD" with lore "" and "&fDaily rewards are &c&lDISABLED&f." and "&fCheck back later or see our" and "&fdiscord for more info." and "" and "&7&o(( Cannot Claim Reward! ))" 
				format gui slot 15 with {_fire} named "&e&lDAILY STREAKS" with lore "" and "&fCurrent Streak: %{streaks::%{_uuid}%}%" and "" and "&fStreaks are all currently &c&lPAUSED&f." and "&fYour streak will remain the same until" and "&funpaused. Check back later. For more" and "&finfo refer to our discord." 
		open gui last gui to {_p}

command /daily-unlink:
	permission: *
	trigger:
		clear {discord.verified::%player's uuid%}

command daily [<text>]:
	trigger:
		if arg-1 isn't set:
			if {discord.verified::%player's uuid%} isn't set:
				daily_menu(player, "unlinked")
			if {discord.verified::%player's uuid%} is set:
				daily_menu(player, "linked")
		if player has permission "premiums.admin":
			if arg-1 is "pause":
				set {_fake-time} to now
				loop all players:
					set {_uuid} to uuid of loop-player
					dailywait(loop-player, "pause", {_fake-time})
					set {daily.waited-time::%{_uuid}%} to "PAUSED"
					set {_waited} to difference between {last-use::%{_uuid}%} and now
					set {waited.daily::%{_uuid}%} to difference between {_waited} and {@daily-wait-time}
			if arg-1 is "unpause":
				loop all players:
					set {_uuid} to uuid of loop-player
					dailywait(loop-player, "unpause", {waited.daily::%{_uuid}%})	
			if arg-1 is "clear":
				loop all players:
					set {_uuid} to uuid of loop-player
					clear {daily.waited-time::%{_uuid}%}	
					clear {streak.multiplier.cash::%{_uuid}%}
					clear {streak.multiplier.gem::%{_uuid}%}
					clear {streaks::%{_uuid}%}

