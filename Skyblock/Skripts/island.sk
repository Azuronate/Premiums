options:
	tag: &e&lSKYBLOCK &7Â¬&f

function issetup(t: text, p:player):
	if {_t} is "setup":
		set {island.upgrade.spawners::%{_p}%} to 8
		set {island.fly::%{_p}%} to 0
		set {island.piston.amount::%{island.owner::%{_p}%}%} to 0
		set {island.piston.max::%{island.owner::%{_p}%}%} to 10
		set {island.observer.amount::%{island.owner::%{_p}%}%} to 0
		set {island.observer.max::%{island.owner::%{_p}%}%} to 10
		set {island.member.amount::%{island.owner::%{_p}%}%} to 1
		set {island.member.max::%{island.owner::%{_p}%}%} to 2
		set {island.level::%{_p}%} to 0
		set {island.robot.amount::%{island.owner::%{_p}%}%} to 0
		set {island.robot.max::%{island.owner::%{_p}%}%} to 2
		set {island.stack.redstone.amount::%{island.owner::%{_p}%}%} to 0
		delete {island.stack.redstone.loc::%{island.owner::%{_p}%}%}
		set {island.stack.lapis.amount::%{island.owner::%{_p}%}%} to 0
		delete {island.stack.lapis.loc::%{island.owner::%{_p}%}%}
		set {island.stack.coal.amount::%{island.owner::%{_p}%}%} to 0
		delete {island.stack.coal.loc::%{island.owner::%{_p}%}%}
		set {island.stack.iron.amount::%{island.owner::%{_p}%}%} to 0
		delete {island.stack.iron.loc::%{island.owner::%{_p}%}%}
		set {island.stack.gold.amount::%{island.owner::%{_p}%}%} to 0
		delete {island.stack.gold.loc::%{island.owner::%{_p}%}%}
		set {island.stack.diamond.amount::%{island.owner::%{_p}%}%} to 0
		delete {island.stack.diamond.loc::%{island.owner::%{_p}%}%}
		set {island.stack.emerald.amount::%{island.owner::%{_p}%}%} to 0
		delete {island.stack.emerald.loc::%{island.owner::%{_p}%}%}
		set {island.stack.beacon.amount::%{island.owner::%{_p}%}%} to 0
		delete {island.stack.beacon.loc::%{island.owner::%{_p}%}%}
		set {island.stack.endportalframe.amount::%{island.owner::%{_p}%}%} to 0
		delete {island.stack.endportalframe.loc::%{island.owner::%{_p}%}%}		
		set {island.stack.commandblock.amount::%{island.owner::%{_p}%}%} to 0
		delete {island.stack.commandblock.loc::%{island.owner::%{_p}%}%}		
		set {island.bank.%{island.owner::%{_p}%}%} to 0
	if {_t} is "reset":
		delete {island.upgrade.spawners::%{_p}%}
		delete {island.fly::%{_p}%}
		delete {island.piston.amount::%{island.owner::%{_p}%}%}
		delete {island.piston.max::%{island.owner::%{_p}%}%}
		delete {island.observer.amount::%{island.owner::%{_p}%}%}
		delete {island.observer.max::%{island.owner::%{_p}%}%}
		delete {island.member.amount::%{island.owner::%{_p}%}%}
		delete {island.member.max::%{island.owner::%{_p}%}%}
		delete {island.level::%{_p}%}
		delete {island.robot.amount::%{island.owner::%{_p}%}%}
		delete {island.robot.max::%{island.owner::%{_p}%}%}
		delete {island.stack.redstone.amount::%{island.owner::%{_p}%}%}
		delete {island.stack.redstone.loc::%{island.owner::%{_p}%}%}
		delete {island.stack.lapis.amount::%{island.owner::%{_p}%}%}
		delete {island.stack.lapis.loc::%{island.owner::%{_p}%}%}
		delete {island.stack.coal.amount::%{island.owner::%{_p}%}%}
		delete {island.stack.coal.loc::%{island.owner::%{_p}%}%}
		delete {island.stack.iron.amount::%{island.owner::%{_p}%}%}
		delete {island.stack.iron.loc::%{island.owner::%{_p}%}%}
		delete {island.stack.gold.amount::%{island.owner::%{_p}%}%}
		delete {island.stack.gold.loc::%{island.owner::%{_p}%}%}
		delete {island.stack.diamond.amount::%{island.owner::%{_p}%}%}
		delete {island.stack.diamond.loc::%{island.owner::%{_p}%}%}
		delete {island.stack.emerald.amount::%{island.owner::%{_p}%}%}
		delete {island.stack.emerald.loc::%{island.owner::%{_p}%}%}
		delete {island.stack.beacon.amount::%{island.owner::%{_p}%}%}
		delete {island.stack.beacon.loc::%{island.owner::%{_p}%}%}
		delete {island.stack.endportalframe.amount::%{island.owner::%{_p}%}%}
		delete {island.stack.endportalframe.loc::%{island.owner::%{_p}%}%}
		delete {island.stack.commandblock.amount::%{island.owner::%{_p}%}%}
		delete {island.stack.commandblock.loc::%{island.owner::%{_p}%}%}
		delete {island.bank.%{island.owner::%{_p}%}%}
		delete bound with id "%{island.owner::%{_p}%}%"
		delete {bound.center::%{_p}%}

#
# To start island gen, put schem into area, put items in chest, save, reload skript, and create island
#

command /island [<text>] [<offlineplayer>]:
	aliases: /is
	trigger:
		if arg 1 is set:
			set {_uuid} to uuid of player
			if arg 1 is "save":
				if player has permission "premiums.island.save":
					set {_a} to location(5, 125, 1, world "ul_islands")
					set {_b} to location(-2, 134, -6, world "ul_islands")
					wait 1 tick
					save between {_a} and {_b} as "island"
					send "{@tag} &fIsland saved!" to player
					delete {island.owner::%player%}
			else if arg 1 is "create":
				if {island.owner::%player%} is not set:
					set {waitedtime::%player%} to now
					set {island.owner::%player%} to player
					add 2000 to {skyblock.x}
					add 2000 to {skyblock.z}
					set {_location} to location({skyblock.x}+11.5, 128, {skyblock.z}+2.5, world "ul_islands", 89.4, -1.2)
					#set yaw of {_location} to 89.4
					#set pitch of {_location} to -1.2
					load "island" at location({skyblock.x}+6, 125, {skyblock.z}-2, world "ul_islands") with rotation 0
					set {island.origin::%player%} to {_location}
					set {island.home::%player%} to {_location}
					set {island.lock::%player%} to 0
					loop all entities where [input is an armor stand]:
						dostuff(player, loop-entity, "enable")
					issetup("setup", player)
					upgradeislandsize("setup", player, 20)
					make player execute "/is home"
					add player to {island.members.%player%::*}
					set {_diff} to difference between {waitedtime::%player%} and now
					set {_diff} to "%{_diff}%"
					replace all " seconds" with "s" in {_diff}
					send "{@tag} &fIsland created! &f(&7%{_diff}%&f)"
				else:
					message "{@tag} &fYou already have an island!"
			else if arg 1 is "chat":
				if {island.owner::%player%} is not set:
					message "{@tag} &fYou do not have an island!"
				else:
					if {island.chat::%player%} is not set:
						set {island.chat::%player%} to 1
						message "{@tag} &fNow talking in island chat."
					else if {island.chat::%player%} is 1:
						delete {island.chat::%player%}
						message "{@tag} &fNow talking in global chat."
			else if arg 1 is "upgrade" or "upgrades":
				if {island.owner::%player%} is not set:
					message "{@tag} &fYou do not have an island!"
				else:
					isupgrades(player)
			else if arg 1 is "sethome":
				if {island.owner::%player%} is not set:
					message "{@tag} &fYou do not have an island!"
				else:
					if block under player is air:
						set {_m} to 2
					if {_m} is 2:
						send "{@tag} &fYou cannot set your home in the air."
						stop
					set {island.home::%player%} to player's location
					message "{@tag} &fYou set your island home location."
			else if arg 1 is "go" or "home":
				if {island.owner::%player%} is not set:
					message "{@tag} &fYou do not have an island!"
				else:
					set {bound.%player%} to bound from id "%{island.owner::%player%}%"
					set {bound.center::%player%} to {island.origin::%{island.owner::%player%}%}
					teleport player to {island.home::%player%}
					clear {bound.leave.%player%}
					if block under player is air:
						set block under player to glass block
					loop all entities where [input is an armor stand]:
						dostuff(player, loop-entity, "enable")
					message "{@tag} &fTeleporting to your island."
			else if arg 1 is "level" or "value" or "worth":
				if arg-2 isn't set:
					if {island.owner::%player%} is not set:
						message "{@tag} &fYou do not have an island!"
					set {_o} to {island.owner::%player%}
					isworth(player)
				if arg 2 is set:
					set {_o} to {island.owner::%arg-2%}
					if {island.owner::%{_o}%} is not set:
						message "{@tag} &fThat player doesn't have an island!"
						stop
					isworth(player)
			else if arg 1 is "delete" or "reset":
				if {island.owner::%player%} is not set:
					message "{@tag} &fYou do not have an island!"
				else:
					if {island.owner::%player%} is player:
						create a gui with virtual chest inventory with 5 rows named "&8Confirm Island Reset":
							make gui slot 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43 and 44 with red stained glass pane named "&e"
							make gui slot 22 with end crystal named "&c&lConfirm Island Reset" with lore "&7&oThis action CANNOT be undone", "&7&oand all current progress on your" and "&7&oisland will be reset!":
								close inventory for player
								loop {island.members.%player%::*}:
									make loop-value execute command "/spawn"
									issetup("reset", loop-value)
									delete {island.origin::%loop-value%}
									delete {island.bank.%{island.members.%{island.owner::%loop-value%}%::*}%}
									delete {island.members.%loop-value%::*}
									delete {island.level::%{island.owner::%loop-value%}%}
									delete {island.members.%{island.owner::%loop-value%}%::*}
									delete {island.home::%loop-value%}
									delete {bound.center::%loop-value%}
									delete {bound.%loop-value%}
									delete {island.owner::%loop-value%}
								loop all players:
									if loop-player is within bound with id "%{bound.%player%}%":
										make loop-player execute "/spawn"
								issetup("reset", player)
								delete {island.origin::%player%}
								delete {island.bank.%{island.members.%{island.owner::%player%}%::*}%}
								delete {island.members.%player%::*}
								delete {island.level::%{island.owner::%player%}%}
								delete {island.members.%{island.owner::%player%}%::*}
								delete {island.home::%player%}
								delete {bound.center::%player%}
								delete {bound.%player%}
								delete {island.owner::%player%}
								send "{@tag} &f%player% has deleted the island." to {island.members.%player%::*}
						open gui last gui to player
					else:
						message "{@tag} &fYou cannot delete this island!"
			else if arg 1 is "leave":
				if {island.owner::%player%} is not set:
					message "{@tag} &fYou do not have an island!"
				else:
					if {island.owner::%player%} is not player:
						make player execute command "/spawn"
						loop all entities where [input is an armor stand]:
							if {owner.%loop-entity%} is player:
								dostuff(player, loop-entity, "disable")
								deleteowner(player, loop-entity)
						remove player from {island.members.%{island.owner::%player%}%::*}
						remove 1 from {island.member.amount::%{island.owner::%player%}%}
						delete {island.owner::%player%}
						delete {island.home::%player%}
						delete {island.origin::%player%}
						delete {bound.center::%player%}
						delete {bound.%player%}
						clear {bound.leave.%player%}
						message "{@tag} &fYou left the island."
						send "{@tag} &f%player%left the island." to {island.owner::%player%}
					else:
						message "{@tag} &fYou cannot leave your own island."
			else if arg 1 is "invite":
				if arg 2 is set:
					if {island.member.amount::%{island.owner::%player%}%} is less than {island.member.max::%{island.owner::%player%}%}:
						send "{@tag} &fYou have been invited to join %player%'s island. Use /is accept to join." to arg 2
						message "{@tag} &fYou invited %arg 2% to your island."
						set {island.inviter::%arg 2%} to player
					else:
						if {island.member.amount::%{island.owner::%player%}%} is equal to {island.member.max::%{island.owner::%player%}%}:
							send "{@tag} &fYour island has the max member slots!" to player
							stop
				else:
					message "{@tag} &f/is invite <player>"
			else if arg 1 is "accept":
				if {island.inviter::%player%} is set:
					if {island.owner::%player%} is set:
						set {island.stack.redstone.amount::%{island.owner::%player%}%} to 0
						set {island.stack.lapis.amount::%{island.owner::%player%}%} to 0
						set {island.stack.coal.amount::%{island.owner::%player%}%} to 0
						set {island.stack.iron.amount::%{island.owner::%player%}%} to 0
						set {island.stack.gold.amount::%{island.owner::%player%}%} to 0
						set {island.stack.diamond.amount::%{island.owner::%player%}%} to 0
						set {island.stack.emerald.amount::%{island.owner::%player%}%} to 0
						set {island.stack.beacon.amount::%{island.owner::%player%}%} to 0
						set {island.stack.endportalframe.amount::%{island.owner::%player%}%} to 0
						set {island.stack.commandblock.amount::%{island.owner::%player%}%} to 0
						#clear {island.bank.%{island.members.%{island.owner::%player%}%::*}%}
						loop {island.members.%player%::*}:
							make loop-value execute command "/spawn"
							delete {island.origin::%loop-value%}
							delete {island.owner::%loop-value%}
							delete {island.home::%loop-value%}
							set {island.home::%player%} to {island.home::%{island.inviter::%{island.owner::%player%}%}%}
							send "{@tag} &f%player% has deleted the island." to loop-value
							remove loop-value from {island.members.%player%::*}
					set {island.owner::%player%} to {island.owner::%{island.inviter::%player%}%}
					set {_bankbefore} to {island.bank.%{island.members.%{island.owner::%player%}%::*}%}
					add player to {island.members.%{island.owner::%player%}%::*}
					add 1 to {island.member.amount::%{island.owner::%player%}%}
					add player to {island.online.members::%{island.owner::%player%}%::*}
					set {island.bank.%{island.members.%{island.owner::%player%}%::*}%} to 0
					add {_bankbefore} to {island.bank.%{island.members.%{island.owner::%player%}%::*}%}
					set {island.home::%player%} to {island.home::%{island.owner::%player%}%}
					send "{@tag} &f%player% joined your island!" to {island.inviter::%player%}
					message "{@tag} &fYou joined %{island.owner::%player%}%'s island!"
					set {island.origin::%player%} to {island.origin::%{island.owner::%player%}%}
					teleport player to {island.home::%player%}
					set {bound.%player%} to bound from id "%{island.owner::%player%}%"
					set {bound.center::%player%} to {island.origin::%{island.owner::%player%}%}
					loop all entities where [input is an armor stand]:
						dostuff(player, loop-entity, "enable")
						deleteowner(player, loop-entity)
					delete {island.inviter::%player%}
			else if arg 1 is "members":
				if arg 2 is not set:
					if {island.owner::%player%} is not set:
						message "{@tag} &fYou do not have an island!"
					else:
						if {island.members.%{island.owner::%player%}%::*} is set:
							ismembers(player)
							#message "{@tag} &fIsland members: %{island.members.%{island.owner::%player%}%::*}%"
						else:
							message "{@tag} &fYou do not have any island members."
				else:
					if {island.owner::%arg 2%} is not set:
						message "{@tag} &fThey do not have an island!"
					else:
						if {island.members.%{island.owner::%arg 2%}%::*} is set:
							ismembers(arg-2)
							#message "{@tag} &fIsland members: %{island.members.%{island.owner::%arg 2%}%::*}%"
						else:
							message "{@tag} &fThey do not have any island members."
			else if arg 1 is "top":
				create a gui with virtual chest inventory with 6 rows named "Island Top":
		
					set {_q} to "MHF_Question" parsed as offline player
					format gui slot 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 17, 18, 26, 27, 35, 36, 44, 45, 46, 47, 48, 50, 51, 52, and 53 with black stained glass pane named "&0"
					format gui slot 10, 11, 12, 14, 15, 16, 19, 20, 22, 24, 25, 28, 30, 32, 34, 38, 40, and 42 with gray stained glass pane named "&7"
					format gui slot 13, 21, 23, 29, 31, 33, 37, 39, 41, and 43 with skull of {_q} named "&7???"
					format gui slot 49 with barrier named "&cMain Menu":
						ismenu(player)
					format gui slot 13 with skull of {istop.player1} named "&6(##1) &f%{istop.player1}%'s Island" with lore "", "&e&lSTATISTICS", " &fWorth: $%regex({istop.value1})%", " &fRank: &f##1" and ""
					format gui slot 21 with skull of {istop.player2} named "&e(##2) &f%{istop.player2}%'s Island" with lore "", "&e&lSTATISTICS", " &fWorth: $%regex({istop.value2})%", " &fRank: &f##2" and ""
					format gui slot 23 with skull of {istop.player3} named "&e(##3) &f%{istop.player3}%'s Island" with lore "", "&e&lSTATISTICS", " &fWorth: $%regex({istop.value3})%", " &fRank: &f##3" and ""
					format gui slot 29 with skull of {istop.player4} named "&e(##4) &f%{istop.player4}%'s Island" with lore "", "&e&lSTATISTICS", " &fWorth: $%regex({istop.value4})%", " &fRank: &f##4" and ""
					format gui slot 31 with skull of {istop.player5} named "&e(##5) &f%{istop.player5}%'s Island" with lore "", "&e&lSTATISTICS", " &fWorth: $%regex({istop.value5})%", " &fRank: &f##5" and ""
					format gui slot 33 with skull of {istop.player6} named "&e(##6) &f%{istop.player6}%'s Island" with lore "", "&e&lSTATISTICS", " &fWorth: $%regex({istop.value6})%", " &fRank: &f##6" and ""
					format gui slot 37 with skull of {istop.player7} named "&e(##7) &f%{istop.player7}%'s Island" with lore "", "&e&lSTATISTICS", " &fWorth: $%regex({istop.value7})%", " &fRank: &f##7" and ""
					format gui slot 39 with skull of {istop.player8} named "&e(##8) &f%{istop.player8}%'s Island" with lore "", "&e&lSTATISTICS", " &fWorth: $%regex({istop.value8})%", " &fRank: &f##8" and ""
					format gui slot 41 with skull of {istop.player9} named "&e(##9) &f%{istop.player9}%'s Island" with lore "", "&e&lSTATISTICS", " &fWorth: $%regex({istop.value9})%", " &fRank: &f##9" and ""
					format gui slot 43 with skull of {istop.player10} named "&e(##10) &f%{istop.player10}%'s Island" with lore "", "&e&lSTATISTICS", " &fWorth: $%regex({istop.value10})%", " &fRank: &f##10" and ""
					#format gui slot 13 with skull of {_o} named "&4&lOWNER" with lore "%{is.online.%{_o}%}% &7%{_o}%"
					#set {_topnumber} to 1
					#loop {island.level::*}:
					#	set {_sorted::*} to sort((indices of {island.level::*}), {island.level::*})
					#	loop {_sorted::*}:
					#		set {_player} to "%loop-value-2%" parsed as offline player
					#		set {_check} to "%{_player}%"
					#		if {_check} contains "null" or "none":
					#			set {_null} to true
					#		set {_head} to "%{_player}%" parsed as offline player
					#		set {_value::%{_player}%} to "%{island.level::%{_player}%}%" parsed as a number
					#		if {_value::%{_player}%} is less than or equal to 0:
					#			stop
					#		else:				
					#			if {_topnumber} is 1:
					#				set {_slot} to 13
					#				set {_place::%{_player}%} to "&6(##1)"
					#			else if {_topnumber} is 2:
					#				set {_slot} to 21
					#				set {_place::%{_player}%} to "&e(##2)"
					#			else if {_topnumber} is 3:
					#				set {_slot} to 23
					#				set {_place::%{_player}%} to "&e(##3)"
					#			else if {_topnumber} is 4:
					#				set {_slot} to 29
					#				set {_place::%{_player}%} to "&e(##4)"
					#			else if {_topnumber} is 5:
					#				set {_slot} to 31
					#				set {_place::%{_player}%} to "&e(##5)"
					#			else if {_topnumber} is 6:
					#				set {_slot} to 33
					#				set {_place::%{_player}%} to "&e(##6)"
					#			else if {_topnumber} is 7:
					#				set {_slot} to 37
					#				set {_place::%{_player}%} to "&e(##7)"
					#			else if {_topnumber} is 8:
					#				set {_slot} to 39	
					#				set {_place::%{_player}%} to "&e(##8)"
					#			else if {_topnumber} is 9:
					#				set {_slot} to 41
					#				set {_place::%{_player}%} to "&e(##9)"
					#			else if {_topnumber} is 10:
					#				set {_slot} to 43
					#				set {_place::%{_player}%} to "&e(##10)"
					#			set {_skull} to skull of {_head} named "%{_place::%{_player}%}% &f%{_player}%'s island"
					#			add "" to lore of {_skull}
					#			add colored "&e&lSTATISTICS" to lore of {_skull}
					#			add colored " &fWorth: $%regex({_value::%{_player}%})%" to lore of {_skull}
					#			add colored " &fRank: ##%{_topnumber}%" to lore of {_skull}
					#			add colored "" to lore of {_skull}	
								#add colored "&e&lTEAM" to lore of {_skull}
								#add colored " &f%{_o}%'s Island" to lore of {_skull}
								#set {_list::*} to {island.members.%{island.owner::%{_player}%}%::*}
								#loop {_list::*}:
								#	set {_p} to "%loop-value-3%" parsed as offline player
								#	if {is.online.%{_p}%} contains "a":
								#		add {_p} to {online::*}
								#	if {is.online.%{_p}%} contains "c":
								#		add {_p} to {offline::*}
								#	statuslist({_p}, {_skull})
					#			if {_topnumber} is greater than 10:
					#				exit loop
					#		if {_null} isn't set:
					#			format gui slot {_slot} with {_skull}
					#			add 1 to {_topnumber}
				open gui last gui to player
				stop
			else if arg 1 is "kick" or "remove":
				if arg 2 is set:
					if {island.owner::%player%} is not set:
						message "{@tag} &fYou do not have an island!"
					else:
						if {island.owner::%player%} is not player:
							message "{@tag} &fYou're not the owner of this island!"
						else:
							if {island.members.%player%::*} contains arg 2:
								remove arg 2 from {island.members.%player%::*}
								remove 1 from {island.member.amount::%{island.owner::%player%}%}
								delete {island.owner::%arg 2%}
								delete {island.home::%arg 2%}
								loop all entities where [input is an armor stand]:
									dostuff(player, loop-entity, "disable")
									deleteowner(player, loop-entity)
								delete bound with id "%{island.owner::%{_p}%}%"
								delete {bound.center::%{_p}%}
								message "{@tag} &fYou kicked %arg 2% from the island."
								send "{@tag} &fYou were kicked from %player%'s island!" to arg 2
							else:
								message "{@tag} &f%arg 2% is not added to your island."
				else:
					message "{@tag} &f/is %arg 1% <player>"
			else if arg 1 is "ban":
				if arg 2 is set:
					if arg-2 isn't player:
						if {island.owner::%player%} is not set:
							message "{@tag} &fYou do not have an island!"
						else:
							if arg-2 doesn't have permission "premiums.staff":
								add arg 2 to {island.bans.%{island.owner::%player%}%::*}
								message "{@tag} &fYou have banned %arg 2% from your island."
								if location of arg-2 is within bound with id "%{bound.%player%}%":
									teleport arg-2 to {spawn}
							else:
								message "{@tag} You cannot ban this player!"
					else:
						message "{@tag} You cannot ban yourself!"
				else:
					message "{@tag} /is ban <player>"
			else if arg 1 is "unban":
				if arg 2 is set:
					if {island.owner::%player%} is not set:
						message "{@tag} &fYou do not have an island!"
					else:
						remove arg 2 from {island.bans.%{island.owner::%player%}%::*}
						message "{@tag} &fYou have unbanned %arg 2% from your island."
				else:
					message "{@tag} &f/is unban <player>"
			else if arg 1 is "visit":
				if arg 2 is set:
					if {island.owner::%arg 2%} is not set:
						message "{@tag} &f'%arg 2%' has not created an island."
						stop
					if {island.lock::%{island.owner::%arg 2%}%} is 1:
						message "{@tag} &fThis island is locked."
						stop
					if {island.bans.%{island.owner::%arg 2%}%::*} contains player:
						message "{@tag} &fYou're banned from this island."
						stop
					set {bound.%player%} to bound from id "%{island.owner::%arg-2%}%"
					set {bound.leave.%player%} to arg-2
					set {bound.center::%player%} to {island.origin::%{island.owner::%arg-2%}%}
					teleport player to {island.home::%arg-2%}
					message "{@tag} &fTeleporting to %arg-2%'s island."
					loop all entities where [input is an armor stand]:
						dostuff(player, loop-entity, "disable")
				else:
					message "{@tag} &f/is visit <player>"
			else if arg 1 is "bypass":
				if player has permission "premiums.admin":
					if {island.bypass.%player's uuid%} is not set:
						set {island.bypass.%player's uuid%} to true
						message "{@tag} &fIsland bypass enabled."
					else:
						clear {island.bypass.%player's uuid%}
						message "{@tag} &fIsland bypass disabled."
			else if arg 1 is "lock":
				if {island.owner::%player%} is not set:
					message "{@tag} &fYou do not have an island!"
				else:
					set {island.lock::%{island.owner::%player%}%} to 1
					message "{@tag} &fYour island has been locked."
					loop all players:
						if {island.members.%{island.owner::%player%}%::*} doesn't contain loop-player:
							if location of loop-player is within bound with id "%{bound.%player%}%":
								teleport loop-player to {spawn}
			else if arg 1 is "unlock":
				if {island.owner::%player%} is not set:
					message "{@tag} &fYou do not have an island!"
				else:
					set {island.lock::%{island.owner::%player%}%} to 0
					message "{@tag} &fYour island has been unlocked."
			else if arg 1 is "bank":
				isbank(player, "main")
			else if arg 1 is "menu":
				if {island.owner::%player%} is not set:
					make player execute command "/is create"
				else:
					ismenu(player)
			else:
				message "&e&m&lâ¯â¯â¯â¯â¯â¯â¯â¯â¯â¯&6&l SKYBLOCK COMMANDS &e&m&lâ¯â¯â¯â¯â¯â¯â¯â¯â¯â¯"
				message "&e  /is create &f- Create an island."
				message "&e  /is sethome &f- Sets the home for your island."
				message "&e  /is go &f- Teleport to your island."
				message "&e  /is level &f- View the level of your island."
				message "&e  /is bank &f- View the bank of your island."
				message "&e  /is upgrade &f- View the upgrades for your island."
				message "&e  /is visit &f- Visit someones island."
				message "&e  /is invite &f- Invite somebody to your island."
				message "&e  /is accept &f- Accepts an invite."
				message "&e  /is members &f- Lists your current island members."
				message "&e  /is kick &f- Kick a player from your island."
				message "&e  /is ban/unban &f- Denys/Undenys a player from entering your island."
				message "&e  /is lock/unlock &f- Prevents/Allows players from visiting your island."
				message "&e&m&lâ¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯"
		else:	
			if {island.owner::%player%} is not set:
				make player execute command "/is create"
			else:
				ismenu(player)


function ismenu(p:player):
	create a gui with virtual chest inventory with 6 rows named "Island Menu":

		set {_uuid} to uuid of {_p}
		format gui slot 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 17, 18, 26, 27, 35, 36, 44, 45, 46, 47, 48, 50, 51, 52, and 53 with black stained glass pane named "&0"
		format gui slot 10, 11, 12, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 28, 34, 37, 38, 39, 40, 41, 42, and 43 with gray stained glass pane named "&7"
		format gui slot 13 with skull of {_p} named "&e&lYOUR STATS" with lore "" and " &fBalance: $%format({balance::%{_uuid}%})%" and " &fGems: %{gems::%{_uuid}%}%" and " &fPlaytime: %{playtime::%{_p}%}%" and "" and "&7&o(( Joined on %{joined.date.%{_uuid}%}% UTC ))"
		format gui slot 29 with red bed named "&e&lISLAND HOME" with lore "" and "&fTeleport back to your island" and "&fhome location." and "" and "&7&o(( Click to Teleport ))":
			make {_p} execute command "/is home"
		set {_o} to {island.owner::%{_p}%}
		format gui slot 30 with emerald block named "&e&lISLAND WORTH" with lore "" and "&fWorth: &f$%format({island.level::%{_o}%})%" and "" and "&fPlace down &evalue blocks&f to further" and "&fyour island's worth and compete" and "&ffor the top spot on &eisland top&f." and "" and "&7&o(( Click to view ))":
			make {_p} execute command "/is worth"
		set {_list::*} to {island.members.%{island.owner::%{_p}%}%::*}
		set {_comp} to compass named "&e&lISLAND MEMBERS"
		loop {_list::*}:
			set {_p2} to "%loop-value%" parsed as offline player
			if {is.online.%{_p2}%} contains "a":
				add {_p2} to {online::*}
			if {is.online.%{_p2}%} contains "c":
				add {_p2} to {offline::*}
			statuslist({_p2}, {_comp})
		format gui slot 31 with {_comp}:
			ismembers({_p})
		format gui slot 32 with anvil named "&e&lISLAND UPGRADES" with lore "" and "&fUp the current limitations on" and "&fyour island with upgrades!" and "" and "&7&o(( Click to view ))":
			isupgrades({_p})
		format gui slot 33 with chest named "&e&lISLAND BANK" with lore "" and "&fSavings: $%format({island.bank.%{island.members.%{island.owner::%{_p}%}%::*}%})%" and "" and "&fStore extra cash and allow for it to" and "&fbe distributed around teammates." and "" and "&7&o(( Click to view ))":
			isbank({_p}, "main")
		format gui slot 49 with barrier named "&cExit":
			close inventory for {_p}
	open gui last gui to {_p}

function ismembers(p:player):
	create a gui with virtual chest inventory with 6 rows named "Island Members":
	
		set {_q} to "MHF_Question" parsed as offline player
		set {_o} to "%{island.owner::%{_p}%}%" parsed as offline player
		format gui slot 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 17, 18, 26, 27, 35, 36, 44, 45, 46, 47, 48, 50, 51, 52, and 53 with black stained glass pane named "&0"
		format gui slot 10, 11, 12, 14, 15, 16, 19, 20, 22, 24, 25, 28, 30, 32, 34, 38, 40, and 42 with gray stained glass pane named "&7"
		format gui slot 21, 23, 29, 31, 33, 37, 39, 41, and 43 with skull of {_q} named "&7???"
		format gui slot 13 with skull of {_o} named "&4&lOWNER" with lore "%{is.online.%{_o}%}% &f%{_o}%"
		set {_list::*} to {island.members.%{island.owner::%{_p}%}%::*}
		set {_topnumber} to 1
		loop {_list::*}:
			set {_player} to "%loop-value%" parsed as offline player
			set {_n} to size of {_list::*}
			if "%{_player}%" != "%{_o}%":
				if {_topnumber} is 1:
					set {_slot} to 21
				else if {_topnumber} is 2:
					set {_slot} to 23
				else if {_topnumber} is 3:
					set {_slot} to 29
				else if {_topnumber} is 4:
					set {_slot} to 31
				else if {_topnumber} is 5:
					set {_slot} to 33
				else if {_topnumber} is 6:
					set {_slot} to 37
				else if {_topnumber} is 7:
					set {_slot} to 39
				else if {_topnumber} is 8:
					set {_slot} to 41	
				else if {_topnumber} is 9:
					set {_slot} to 43
				add 1 to {_topnumber}
				if {_p} is {_o}:
					format gui slot {_slot} with skull of {_player} named "&7&lMEMBER" with lore "%{is.online.%{_player}%}% &f%{_player}%"
				else:
					format gui slot {_slot} with skull of {_player} named "&7&lMEMBER" with lore "%{is.online.%{_player}%}% &f%{_player}%"
				if {_topnumber} is greater than 10:
					exit loop
		format gui slot 49 with barrier named "&cMain Menu":
			ismenu({_p})
	open gui last gui to {_p}

function isupgrades(p:player):
	create a gui with virtual chest inventory with 6 rows named "Island Upgrades":

		set {_uuid} to uuid of {_p}
		format gui slot 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 17, 18, 26, 27, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, and 53 with black stained glass pane named "&0" #44, 45, 46, 47, 48, 50, 51, 52, and 53 with black stained glass pane named "&0"
		format gui slot 10, 11, 12, 13, 14, 15, 16, 19, 20, 22, 24, 25, 28, 29, 31, 33, 34, 37, 38, 39, 40, 41, 42, and 43 with gray stained glass pane named "&7"
		# Stages of upgrades
		# Size
		if {island.size::%{island.owner::%{_p}%}%} is 21:
			set {_stage.size} to 0
			set {_upgrade.size} to "42x42"
			set {_price.size} to 150
		if {island.size::%{island.owner::%{_p}%}%} is 42:
			set {_stage.size} to 1
			set {_upgrade.size} to "63x63"
			set {_price.size} to 300
		if {island.size::%{island.owner::%{_p}%}%} is 63:
			set {_stage.size} to 2
			set {_upgrade.size} to "84x84"
			set {_price.size} to 450
		if {island.size::%{island.owner::%{_p}%}%} is 84:
			set {_stage.size} to 3
			format gui slot 21 with oak sapling named "&eIsland Size &7| &f%{_stage.size}%/3" with lore "" and "&fIncrease the size of your island" and "&fand continue on building!" and "" and "&e&lLIMIT REACHED &r&e(84x84)" and "&fMaximum Upgrade Reached!"
		else:
			format gui slot 21 with oak sapling named "&eIsland Size &7| &f%{_stage.size}%/3" with lore "" and "&fIncrease the size of your island" and "&fand continue on building!" and "" and "&e&lBUY NOW &e(%{island.size::%{island.owner::%{_p}%}%}%x%{island.size::%{island.owner::%{_p}%}%}% &eâ¡ %{_upgrade.size}%)" and "&fPurchase for %{_price.size}% Gems!":
				if {gems::%{_uuid}%} is greater than or equal to {_price.size}:
					remove {_price.size} from {gems::%{_uuid}%}
					if {_stage.size} is 0:
						upgradeislandsize("upgrade", {_p}, 40)
						set {island.size::%{island.owner::%{_p}%}%} to 42
						send "{@tag} &fIsland size upgraded to 42x42!"
						isupgrades({_p})
						stop	
					if {_stage.size} is 1:
						upgradeislandsize("upgrade", {_p}, 60)
						set {island.size::%{island.owner::%{_p}%}%} to 63
						send "{@tag} &fIsland size upgraded to 63x63!"
						isupgrades({_p})
						stop
					if {_stage.size} is 2:
						upgradeislandsize("upgrade", {_p}, 80)
						set {island.size::%{island.owner::%{_p}%}%} to 84
						send "{@tag} &fIsland size upgraded to 84x84!"
						isupgrades({_p})
						stop				
				else:
					if {gems::%{_uuid}%} is less than {_price.size}:
						send "{@tag} &fSorry you don't have enough gems to upgrade!"
						stop
		# Members
		if {island.member.max::%{island.owner::%{_p}%}%} is 2:
			set {_stage.member} to 0
			set {_price.member} to 150
		if {island.member.max::%{island.owner::%{_p}%}%} is 4:
			set {_stage.member} to 1
			set {_price.member} to 300
		if {island.member.max::%{island.owner::%{_p}%}%} is 6:
			set {_stage.member} to 2
			set {_price.member} to 450
		if {island.member.max::%{island.owner::%{_p}%}%} is 8:
			set {_stage.member} to 3
			set {_price.member} to 600
		set {_upgrade.member} to ({island.member.max::%{island.owner::%{_p}%}%} + 2)
		if {island.member.max::%{island.owner::%{_p}%}%} is 10:
			set {_stage.member} to 4
			set {_upgrade.member} to 10
			format gui slot 22 with totem of undying named "&eMember Slots &7| &f%{_stage.member}%/4" with lore "" and "&fGrow your team larger and continue" and "&fgrinding your way to the top." and "" and "&e&lLIMIT REACHED &r&e(10)" and "&fMaximum Upgrade Reached!"
		else:
			format gui slot 22 with totem of undying named "&eMember Slots &7| &f%{_stage.member}%/4" with lore "" and "&fGrow your team larger and continue" and "&fgrinding your way to the top." and "" and "&e&lBUY NOW &e(%{island.member.max::%{island.owner::%{_p}%}%}% &eâ¡ %{_upgrade.member}%)" and "&fPurchase for %{_price.member}% Gems!":
				if {gems::%{_uuid}%} is greater than or equal to {_price.member}:
					remove {_price.member} from {gems::%{_uuid}%}
					add 2 to {island.member.max::%{island.owner::%{_p}%}%}
					send "{@tag} &fYour island now has %{island.member.max::%{island.owner::%{_p}%}%}% &fmember slots!"	
					isupgrades({_p})
					stop				
				else:
					if {gems::%{_uuid}%} is less than {_price.member}:
						send "{@tag} &fSorry you don't have enough gems to upgrade!"
						stop
		# Fly
		if {island.fly::%{island.owner::%{_p}%}%} is 0:
			set {_stage.fly} to 0
			set {_upgrade.fly} to "ON"
			set {_price.fly} to 300
		if {island.fly::%{island.owner::%{_p}%}%} is 1:
			set {_stage.fly} to 1
			format gui slot 23 with feather named "&eIsland Fly &7| &f%{_stage.fly}%/1" with lore "" and "&fUnlock the mythical powers to" and "&fflight and build more efficiently." and "" and "&e&lLIMIT REACHED &r&e(ON)" and "&fMaximum Upgrade Reached!"
		else:
			format gui slot 23 with feather named "&eIsland Fly &7| &f%{_stage.fly}%/1" with lore "" and "&fUnlock the mythical powers to" and "&fflight and build more efficiently." and "" and "&e&lBUY NOW &e(OFF &eâ¡ %{_upgrade.fly}%)" and "&fPurchase for %{_price.fly}% Gems!":
				if {gems::%{_uuid}%} is greater than or equal to {_price.fly}:
					remove {_price.fly} from {gems::%{_uuid}%}	
					send "{@tag} &fYour island now has fly!"		
					set {island.fly::%{island.owner::%{_p}%}%} to 1
					isupgrades({_p})	
				else:
					if {gems::%{_uuid}%} is less than {_price.fly}:
						send "{@tag} &fSorry you don't have enough gems to upgrade!"		
						stop
		# Pistons
		if {island.piston.max::%{island.owner::%{_p}%}%} is 10:
			set {_stage.piston} to 0
			set {_upgrade.piston} to 20
			set {_price.piston} to 75
		if {island.piston.max::%{island.owner::%{_p}%}%} is 20:
			set {_stage.piston} to 1
			set {_upgrade.piston} to 30
			set {_price.piston} to 150
		if {island.piston.max::%{island.owner::%{_p}%}%} is 30:
			set {_stage.piston} to 2
			set {_upgrade.piston} to 40
			set {_price.piston} to 225
		if {island.piston.max::%{island.owner::%{_p}%}%} is 40:
			set {_stage.piston} to 3
			set {_upgrade.piston} to 50
			set {_price.piston} to 300
		if {island.piston.max::%{island.owner::%{_p}%}%} is 50:
			set {_stage.piston} to 4
			set {_upgrade.piston} to 60
			set {_price.piston} to 375
		if {island.piston.max::%{island.owner::%{_p}%}%} is 60:
			set {_stage.piston} to 5
			set {_upgrade.piston} to 70
			set {_price.piston} to 450
		if {island.piston.max::%{island.owner::%{_p}%}%} is 70:
			set {_stage.piston} to 6
			set {_upgrade.piston} to 80
			set {_price.piston} to 525
		if {island.piston.max::%{island.owner::%{_p}%}%} is 80:
			set {_stage.piston} to 7
			set {_upgrade.piston} to 90
			set {_price.piston} to 600
		if {island.piston.max::%{island.owner::%{_p}%}%} is 90:
			set {_stage.piston} to 8
			set {_upgrade.piston} to 100
			set {_price.piston} to 675
		if {island.piston.max::%{island.owner::%{_p}%}%} is 100:
			set {_stage.piston} to 9
			format gui slot 30 with piston named "&ePiston Slots &7| &f%{_stage.piston}%/9" with lore "" and "&fPush objects around and easily" and "&fcreate large contraptions with" and "&fthe use of pistons." and "" and "&e&lLIMIT REACHED &r&e(100)" and "&fMaximum Upgrade Reached!"
		else:
			format gui slot 30 with piston named "&ePiston Slots &7| &f%{_stage.piston}%/9" with lore "" and "&fPush objects around and easily" and "&fcreate large contraptions with" and "&fthe use of pistons." and "" and "&e&lBUY NOW &e(%{island.piston.max::%{island.owner::%{_p}%}%}% &eâ¡ %{_upgrade.piston}%)" and "&fPurchase for %{_price.piston}% Gems!":
				if {gems::%{_uuid}%} is greater than or equal to {_price.piston}:
					remove {_price.piston} from {gems::%{_uuid}%}
					add 10 to {island.piston.max::%{island.owner::%{_p}%}%}
					send "{@tag} &fYour island now has %{island.piston.max::%{island.owner::%{_p}%}%}% &fpiston slots!"	
					isupgrades({_p})
					stop				
				else:
					if {gems::%{_uuid}%} is less than {_price.piston}:
						send "{@tag} &fSorry you don't have enough gems to upgrade!"
						stop	
		# Observers
		if {island.observer.max::%{island.owner::%{_p}%}%} is 10:
			set {_stage.observer} to 0
			set {_upgrade.observer} to 20
			set {_price.observer} to 75
		if {island.observer.max::%{island.owner::%{_p}%}%} is 20:
			set {_stage.observer} to 1
			set {_upgrade.observer} to 30
			set {_price.observer} to 150
		if {island.observer.max::%{island.owner::%{_p}%}%} is 30:
			set {_stage.observer} to 2
			set {_upgrade.observer} to 40
			set {_price.observer} to 225
		if {island.observer.max::%{island.owner::%{_p}%}%} is 40:
			set {_stage.observer} to 3
			set {_upgrade.observer} to 50
			set {_price.observer} to 300
		if {island.observer.max::%{island.owner::%{_p}%}%} is 50:
			set {_stage.observer} to 4
			set {_upgrade.observer} to 60
			set {_price.observer} to 375
		if {island.observer.max::%{island.owner::%{_p}%}%} is 60:
			set {_stage.observer} to 5
			set {_upgrade.observer} to 70
			set {_price.observer} to 450
		if {island.observer.max::%{island.owner::%{_p}%}%} is 70:
			set {_stage.observer} to 6
			set {_upgrade.observer} to 80
			set {_price.observer} to 525
		if {island.observer.max::%{island.owner::%{_p}%}%} is 80:
			set {_stage.observer} to 7
			set {_upgrade.observer} to 90
			set {_price.observer} to 600
		if {island.observer.max::%{island.owner::%{_p}%}%} is 90:
			set {_stage.observer} to 8
			set {_upgrade.observer} to 100
			set {_price.observer} to 675
		if {island.observer.max::%{island.owner::%{_p}%}%} is 100:
			set {_stage.observer} to 9
			format gui slot 31 with observer named "&eObserver Slots &7| &f%{_stage.observer}%/9" with lore "" and "&fMotion detection is made easy" and "&fwith observers. Use observers" and "&fto make farms more efficient." and "" and "&e&lLIMIT REACHED &r&e(100)" and "&fMaximum Upgrade Reached!"
		else:
			format gui slot 31 with observer named "&eObserver Slots &7| &f%{_stage.observer}%/9" with lore "" and "&fMotion detection is made easy" and "&fwith observers. Use observers" and "&fto make farms more efficient." and "" and "&e&lBUY NOW &e(%{island.observer.max::%{island.owner::%{_p}%}%}% &eâ¡ %{_upgrade.observer}%)" and "&fPurchase for %{_price.observer}% Gems!":
				if {gems::%{_uuid}%} is greater than or equal to {_price.observer}:
					remove {_price.observer} from {gems::%{_uuid}%}
					add 10 to {island.observer.max::%{island.owner::%{_p}%}%}
					send "{@tag} &fYour island now has %{island.observer.max::%{island.owner::%{_p}%}%}% &fobserver slots!"	
					isupgrades({_p})
					stop				
				else:
					if {gems::%{_uuid}%} is less than {_price.observer}:
						send "{@tag} &fSorry you don't have enough gems to upgrade!"
						stop		
		# Robots
		if {island.robot.max::%{island.owner::%{_p}%}%} is 2:
			set {_stage.robot} to 0
			set {_upgrade.robot} to 4
			set {_price.robot} to 150
		if {island.robot.max::%{island.owner::%{_p}%}%} is 4:
			set {_stage.robot} to 1
			set {_upgrade.robot} to 6
			set {_price.robot} to 300
		if {island.robot.max::%{island.owner::%{_p}%}%} is 6:
			set {_stage.robot} to 2
			set {_upgrade.robot} to 8
			set {_price.robot} to 450
		if {island.robot.max::%{island.owner::%{_p}%}%} is 8:
			set {_stage.robot} to 3
			set {_upgrade.robot} to 10
			set {_price.robot} to 600
		if {island.robot.max::%{island.owner::%{_p}%}%} is 10:
			set {_stage.robot} to 4
			format gui slot 32 with armor stand named "&eRobot Slots &7| &f%{_stage.robot}%/4" with lore "" and "&fRobots make work flow quicker," and "&fincrease the limit and continue" and "&fcollecting resources." and "" and "&e&lLIMIT REACHED &r&e(10)" and "&fMaximum Upgrade Reached!"
		else:
			format gui slot 32 with armor stand named "&eRobot Slots &7| &f%{_stage.robot}%/4" with lore "" and "&fRobots make work flow quicker," and "&fincrease the limit and continue" and "&fcollecting resources." and "" and "&e&lBUY NOW &e(%{island.robot.max::%{island.owner::%{_p}%}%}% &eâ¡ %{_upgrade.robot}%)" and "&fPurchase for %{_price.robot}% Gems!":
				if {gems::%{_uuid}%} is greater than or equal to {_price.robot}:
					remove {_price.robot} from {gems::%{_uuid}%}
					add 2 to {island.robot.max::%{island.owner::%{_p}%}%}
					send "{@tag} &fYour island now has %{island.robot.max::%{island.owner::%{_p}%}%}% &frobot slots!"	
					isupgrades({_p})
					stop				
				else:
					if {gems::%{_uuid}%} is less than {_price.robot}:
						send "{@tag} &fSorry you don't have enough gems to upgrade!"
						stop
		format gui slot 49 with barrier named "&cMain Menu":
			ismenu({_p})	
	open gui last gui to {_p}

function upgradeislandsize(t: text, p:player, size:number):
	if {_t} is "setup":
		set {_-size} to (0 - {_size})
		set {_origin} to {island.origin::%{island.owner::%{_p}%}%}
		add {_size} to x coordinate of {_origin}
		add {_size} to z coordinate of {_origin}
		set {_loc1.%{_p}%} to {_origin}	
		#set block at location at {_loc1.%{_p}%} to yellow concrete
		set {_origin2} to {island.origin::%{island.owner::%{_p}%}%}
		add {_-size} to x coordinate of {_origin2}
		add {_-size} to z coordinate of {_origin2}
		set {_loc2.%{_p}%} to {_origin2}
		#set block at location at {_loc2.%{_p}%} to yellow concrete
		create a full bound with id "%{island.owner::%{_p}%}%" between {_loc1.%{_p}%} and {_loc2.%{_p}%}
		set {bound.%{_p}%} to bound from id "%{island.owner::%{_p}%}%"
		set {bound.center::%{_p}%} to {island.origin::%{island.owner::%{_p}%}%}
		set {island.size::%{island.owner::%{_p}%}%} to 21
	if {_t} is "upgrade":
		set {_-size} to (0 - {_size})
		delete bound with id "%{island.owner::%{_p}%}%"
		set {_origin} to {island.origin::%{island.owner::%{_p}%}%}
		add {_size} to x coordinate of {_origin}
		add {_size} to z coordinate of {_origin}
		set {_loc1.%{_p}%} to {_origin}	
		#set block at location at {_loc1.%{_p}%} to yellow concrete
		set {_origin2} to {island.origin::%{island.owner::%{_p}%}%}
		add {_-size} to x coordinate of {_origin2}
		add {_-size} to z coordinate of {_origin2}
		set {_loc2.%{_p}%} to {_origin2}
		#set block at location at {_loc2.%{_p}%} to yellow concrete
		create a full bound with id "%{island.owner::%{_p}%}%" between {_loc1.%{_p}%} and {_loc2.%{_p}%}
		set {bound.%{_p}%} to bound from id "%{island.owner::%{_p}%}%"
		set {bound.center::%{_p}%} to {island.origin::%{island.owner::%{_p}%}%}


function isworth(p:player):
	set {_o} to {island.owner::%{_p}%}
	create a gui with virtual chest inventory with 6 rows named "Island Worth (%format({island.level::%{_o}%})%)":

		format gui slot 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 17, 18, 26, 27, 35, 36, 44, 45, 46, 47, 48, 50, 51, 52, and 53 with black stained glass pane named "&0"
		format gui slot 10, 11, 12, 13, 14, 15, 16, 19, 25, 28, 34, 37, 38, 39, 40, 41, 42, and 43 with gray stained glass pane named "&7"
		format gui slot 20 with command block named "&eCommand Block &7| &f5,062,500 ea" with lore "" and "&fValue: $%format({island.stack.commandblock.amount::%{_o}%}*5062500)%" and "" and "&7(Placed: %{island.stack.commandblock.amount::%{_o}%}%)"
		format gui slot 21 with end portal frame named "&eEnd Portal Frame &7| &f506,250 ea" with lore "" and "&fValue: $%format({island.stack.endportalframe.amount::%{_o}%}*506250)%" and "" and "&7(Placed: %{island.stack.endportalframe.amount::%{_o}%}%)"
		format gui slot 22 with beacon named "&eBeacon &7| &f50,625 ea" with lore "" and "&fValue: $%format({island.stack.beacon.amount::%{_o}%}*50625)%" and "" and "&7(Placed: %{island.stack.beacon.amount::%{_o}%}%)"
		format gui slot 23 with emerald block named "&eEmerald Block &7| &f5,062 ea" with lore "" and "&fValue: $%format({island.stack.emerald.amount::%{_o}%}*5062)%" and "" and "&7(Placed: %{island.stack.emerald.amount::%{_o}%}%)"	
		format gui slot 24 with diamond block named "&eDiamond Block &7| &f2,250 ea" with lore "" and "&fValue: $%format({island.stack.diamond.amount::%{_o}%}*2250)%" and "" and "&7(Placed: %{island.stack.diamond.amount::%{_o}%}%)"
		format gui slot 29 with gold block named "&eGold Block &7| &f841 ea" with lore "" and "&fValue: $%format({island.stack.gold.amount::%{_o}%}*841)%" and "" and "&7(Placed: %{island.stack.gold.amount::%{_o}%}%)"
		format gui slot 30 with iron block named "&eIron Block &7| &f616 ea" with lore "" and "&fValue: $%format({island.stack.iron.amount::%{_o}%}*616)%" and "" and "&7(Placed: %{island.stack.iron.amount::%{_o}%}%)"
		format gui slot 31 with redstone block named "&eRedstone Block &7| &f90 ea" with lore "" and "&fValue: $%format({island.stack.redstone.amount::%{_o}%}*90)%" and "" and "&7(Placed: %{island.stack.redstone.amount::%{_o}%}%)"
		format gui slot 32 with lapis block named "&eLapis Block &7| &f67 ea" with lore "" and "&fValue: $%format({island.stack.lapis.amount::%{_o}%}*67)%" and "" and "&7(Placed: %{island.stack.lapis.amount::%{_o}%}%)"
		format gui slot 33 with coal block named "&eCoal Block &7| &f63 ea" with lore "" and "&fValue: $%format({island.stack.coal.amount::%{_o}%}*63)%" and "" and "&7(Placed: %{island.stack.coal.amount::%{_o}%}%)"	
		format gui slot 49 with barrier named "&cMain Menu":
			ismenu({_p})	
	open gui last gui to {_p}


function isbank(p:player, ID:text):	
	if {_ID} is "main":
		if {island.owner::%{_p}%} is not set:
			message "{@tag} &fYou do not have an island!" to {_p}
		else:
			set {_uuid} to uuid of {_p}
			create a gui with virtual chest inventory with 5 rows named "Island Bank":
				format gui slot 0, 1, 2, 3, 5, 6, 7, 8, 9, 17, 18, 26, 27, 35, 36, 37, 38, 39, 41, 42, 43, and 44 with black stained glass pane named "&0"
				format gui slot 10, 11, 12, 13, 14, 15, 16, 19, 21, 22, 23, 25, 28, 29, 30, 31, 32, 33, and 34 with gray stained glass pane named "&7"
				if {island.bank.%{island.members.%{island.owner::%{_p}%}%::*}%} isn't set:
					set {island.bank.%{island.members.%{island.owner::%{_p}%}%::*}%} to 0
				make gui slot 4 with skull of {_p} named "&e&lBALANCE" with lore "&fBalance: $%format({balance::%{_uuid}%})%" and "&fIsland Bank: $%format({island.bank.%{island.members.%{island.owner::%{_p}%}%::*}%})%"
				make gui slot 20 with dispenser named "&e&lWITHDRAW" with lore "" and "&fWithdraw savings from your team's" and "&fbank and get to spending!" and "" and "&7&o(( Click to withdraw ))":
					if {island.bank.%{island.members.%{island.owner::%{_p}%}%::*}%} is 0:
						send "{@tag} &fThere is nothing in the bank!" to {_p}
						stop
					if {island.bank.%{island.members.%{island.owner::%{_p}%}%::*}%} is less than 0:
						close inventory for {_p}
						set {island.bank.%{island.members.%{island.owner::%{_p}%}%::*}%} to 0
						isbank({_p}, "main")
						send "{@tag} &fThere is nothing in the bank!" to {_p}
						stop							
					else:
						isbank({_p}, "withdraw")
				make gui slot 24 with chest named "&e&lDEPOSIT" with lore "" and "&fDeposit money into your team's bank" and "&fand save up for something big!" and "" and "&7&o(( Click to deposit ))":
					if {island.bank.%{island.members.%{island.owner::%{_p}%}%::*}%} is less than 0:
						close inventory for {_p}
						set {island.bank.%{island.members.%{island.owner::%{_p}%}%::*}%} to 0
						isbank({_p}, "main")
						send "{@tag} &fThere is nothing in the bank!" to {_p}
						stop
					if {balance::%{_uuid}%} is less than 0.01 or 0:
						send "{@tag} &fYou have no money to deposit!" to {_p}
						isbank({_p}, "main")
						stop								
					else:
						isbank({_p}, "deposit")
				make gui slot 40 with barrier named "&cMain Menu":
					ismenu({_p})
			open gui last gui to {_p}
	if {_ID} is "withdraw":
		set {_sign} to oak sign named "&eSpecific amount"
		set {_halfbank} to ({island.bank.%{island.members.%{island.owner::%{_p}%}%::*}%} / 2)
		set {_uuid} to uuid of {_p}
		create a gui with virtual chest inventory with 3 rows named "Withdraw":

			make gui slot 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 17, 18, 19, 20, 21, 23, 24, 25, and 26 with black glass pane named "&7" 
			make gui slot 10, 12, 14, and 16 with gray glass pane named "&7"

			make gui slot 15 with {_sign} with lore "" and "&fBank: $%format({island.bank.%{island.members.%{island.owner::%{_p}%}%::*}%})%" and "" and "&7&o(( Click to withdraw ))":
				if {island.bank.%{island.members.%{island.owner::%{_p}%}%::*}%} is 0:
					send "{@tag} &fThere is nothing in the bank!" to {_p}
					isbank({_p}, "main")
					stop
				if {island.bank.%{island.members.%{island.owner::%{_p}%}%::*}%} is less than 0:
					set {island.bank.%{island.members.%{island.owner::%{_p}%}%::*}%} to 0
					send "{@tag} &fThere is nothing in the bank!" to {_p}
					isbank({_p}, "main")
					stop
				else:
					close inventory for {_p}
					set {input.cash.withdraw::%{_uuid}%} to true
					send "{@tag} &fEnter the withdraw amount. (Type: ""cancel"" to exit)" to {_p}
			make gui slot 13 with 32 of dropper named "&eHalf of Bank Balance" with lore "" and "&fBank: $%format({island.bank.%{island.members.%{island.owner::%{_p}%}%::*}%})%" and "&fWithdraw: $%format({_halfbank})%" and "" and "&7&o(( Click to withdraw ))":
				if {island.bank.%{island.members.%{island.owner::%{_p}%}%::*}%} is 0:
					send "{@tag} &fThere is nothing in the bank!" to {_p}
					isbank({_p}, "main")
					stop
				if {island.bank.%{island.members.%{island.owner::%{_p}%}%::*}%} is less than 0.01:
					send "{@tag} &fThere is nothing in the bank!" to {_p}
					set {island.bank.%{island.members.%{island.owner::%{_p}%}%::*}%} to 0
					isbank({_p}, "main")
					stop
				else:
					close inventory for {_p}
					add {_halfbank} to {balance::%{_uuid}%}
					remove {_halfbank} from {island.bank.%{island.members.%{island.owner::%{_p}%}%::*}%}
					set {_members::*} to {island.members.%{_p}%::*}
					remove {_p} from {_members::*}
					message "{@tag} &f%{_p}% has withdrawn $%regex({balance::%{_uuid}%})% from the bank!" to {_members::*}	
					send "{@tag} &fYou've successfully withdrawn $%regex({_halfbank})%." to {_p}
					send title "&c&lBANK WITHDRAWAL" with subtitle "&f%{_p}% withdrawn &c$%format({_halfbank})%" to {island.members.%{_p}%::*}
					isbank({_p}, "withdraw")
					stop
			make gui slot 11 with 64 of dropper named "&eEntire Bank Balance" with lore "" and "&fBank: $%format({island.bank.%{island.members.%{island.owner::%{_p}%}%::*}%})%" and  "" and "&7&o(( Click to withdraw ))":
				if {island.bank.%{island.members.%{island.owner::%{_p}%}%::*}%} is 0:
					send "{@tag} &fThere is nothing in the bank!" to {_p}
					isbank({_p}, "main")
					stop
				if {island.bank.%{island.members.%{island.owner::%{_p}%}%::*}%} is less than 0:
					send "{@tag} &fThere is nothing in the bank!" to {_p}
					isbank({_p}, "main")
					stop
				else:
					close inventory for {_p}
					add {island.bank.%{island.members.%{island.owner::%{_p}%}%::*}%} to {balance::%{_uuid}%}
					send title "&c&lBANK WITHDRAWAL" with subtitle "&f%{_p}% withdrawn &c$%format({island.bank.%{island.members.%{island.owner::%{_p}%}%::*}%})%" to {island.members.%{_p}%::*}		
					set {_members::*} to {island.members.%{_p}%::*}
					remove {_p} from {_members::*}
					message "{@tag} &f%{_p}% has withdrawn $%regex({island.bank.%{island.members.%{island.owner::%{_p}%}%::*}%})% from the bank!" to {_members::*}
					send "{@tag} &fYou've successfully withdrawn $%regex({island.bank.%{island.members.%{island.owner::%{_p}%}%::*}%})%." to {_p}	
					set {island.bank.%{island.members.%{island.owner::%{_p}%}%::*}%} to 0			
					isbank({_p}, "main")
					stop
			make gui slot 22 with barrier named "&cPrevious Page":
				isbank({_p}, "main")
		open gui last gui to {_p}												
	if {_ID} is "deposit":	
		set {_sign} to oak sign named "&eSpecific amount"
		set {_uuid} to uuid of {_p}
		set {_halfbalance} to ({balance::%{_uuid}%} / 2)
		create a gui with virtual chest inventory with 3 rows named "deposit":

			make gui slot 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 17, 18, 19, 20, 21, 23, 24, 25, and 26 with black glass pane named "&7" 
			make gui slot 10, 12, 14, and 16 with gray glass pane named "&7"

			make gui slot 15 with {_sign} with lore "" and "&fBalance: $%format({balance::%{_uuid}%})%" and "" and "&7&o(( Click to deposit ))":
				if {balance::%{_uuid}%} is less than 0.01 or 0:
					send "{@tag} &fYou have no money to deposit!" to {_p}
					isbank({_p}, "main")
					stop
				else:
					close inventory for {_p}
					set {input.cash.deposit::%{_uuid}%} to true
					send "{@tag} &fEnter the deposit amount. (Type: ""cancel"" to exit)" to {_p}
			make gui slot 13 with 32 of dropper named "&eHalf of Balance" with lore "" and "&fBalance: $%format({balance::%{_uuid}%})%" and "&fDeposit: $%format({_halfbalance})%" and "" and "&7&o(( Click to deposit ))":
				if {balance::%{_uuid}%} is less than 0.01 or 0:
					send "{@tag} &fYou have no money to deposit!" to {_p}
					isbank({_p}, "main")
					stop
				else:
					close inventory for {_p}
					remove {_halfbalance} from {balance::%{_uuid}%}
					add {_halfbalance} to {island.bank.%{island.members.%{island.owner::%{_p}%}%::*}%}
					send "{@tag} &fYou've successfully deposited $%regex({_halfbalance})%." to {_p}
					send title "&a&lBANK DEPOSIT" with subtitle "&f%{_p}% deposited &a$%format({balance::%{_uuid}%})%" to {island.members.%{_p}%::*}
					set {_members::*} to {island.members.%{_p}%::*}
					remove {_p} from {_members::*}
					message "{@tag} &f%{_p}% has deposited $%regex({balance::%{_uuid}%})% into the bank!" to {_members::*}
					isbank({_p}, "deposit")
					stop
			make gui slot 11 with 64 of dropper named "&eEntire Balance" with lore "" and "&fDeposit: $%format({balance::%{_uuid}%})%" and "" and "&7&o(( Click to deposit ))":
				if {balance::%{_uuid}%} is less than 0.01 or 0:
					set {balance::%{_uuid}%} to 0
					send "{@tag} &fYou have no money to deposit!" to {_p}
					isbank({_p}, "main")
					stop
				else:
					close inventory for {_p}
					add {balance::%{_uuid}%} to {island.bank.%{island.members.%{island.owner::%{_p}%}%::*}%}
					send title "&a&lBANK DEPOSIT" with subtitle "&f%{_p}% deposited &a$%format({balance::%{_uuid}%})%" to {island.members.%{_p}%::*}
					message "{@tag} &f%{_p}% has deposited $%regex({balance::%{_uuid}%})% into the bank!" to {_members::*}
					send "{@tag} &fYou've successfully deposited $%regex({balance::%{_uuid}%})%." to {_p}
					set {balance::%{_uuid}%} to 0
					set {_members::*} to {island.members.%{_p}%::*}
					remove {_p} from {_members::*}
					isbank({_p}, "main")
					stop
			make gui slot 22 with barrier named "&cPrevious Page":
				isbank({_p}, "main")
		open gui last gui to {_p}	

on form of cobblestone or stone:
	add cobblestone to {_b::*}
	add stone to {_b::*}
	add coal ore to {_b::*}
	add lapis ore to {_b::*}
	add redstone ore to {_b::*}
	add iron ore to {_b::*}
	add gold ore to {_b::*}
	add diamond ore to {_b::*}
	add emerald ore to {_b::*}
	set {_block} to random element out of {_b::*}
	set event-block to {_block}
	stop 

#on block flow:
#	if event-block is water or lava:
#		loop all players:
#			if location of event-block isn't within bound with id "%{bound.%loop-player%}%":
#				cancel event

#on form of cobblestone:
#	set {_c} to random integer between 0 and 102
#	if {_c} is between 0 and 15:
#		set event-block to cobblestone
#		stop
#	if {_c} is between 16 and 31:
#		set event-block to stone
#		stop
#	if {_c} is between 32 and 44:
#		set event-block to lapis ore
#		stop
#	if {_c} is between 45 and 57:
#		set event-block to redstone ore
#		stop
#	if {_c} is between 58 and 78:
#		set event-block to coal ore
#		stop
#	if {_c} is between 79 and 86:
#		set event-block to iron ore
#		stop
#	if {_c} is between 87 and 92:
#		set event-block to gold ore
#		stop
#	if {_c} is between 93 and 98:
#		set event-block to diamond ore
#		stop
#	if {_c} is between 99 and 102:
#		set event-block to emerald ore
#		stop

#
# Limits
#

on place of piston or sticky piston:
	if player's world is "ul_islands":
		if player's gamemode is survival:
			if {island.piston.amount::%{island.owner::%player%}%} is more than or equal to {island.piston.max::%{island.owner::%player%}%}:
				cancel event
				message "{@tag} &fYour island has reached %{island.piston.amount::%{island.owner::%player%}%}%&f/%{island.piston.max::%{island.owner::%player%}%}%&f pistons. Upgrade with /is upgrade."
				stop
			else:
				add 1 to {island.piston.amount::%{island.owner::%player%}%}

on break of piston or sticky piston:
	if player's world is "ul_islands":
		if player's gamemode is survival:
			remove 1 from {island.piston.amount::%{island.owner::%player%}%}

on place of observer:
	if player's gamemode is survival:
		if player's world is "ul_islands":
			if {island.observer.amount::%{island.owner::%player%}%} is more than or equal to {island.observer.max::%{island.owner::%player%}%}:
				cancel event
				message "{@tag} &fYour island has reached %{island.observer.amount::%{island.owner::%player%}%}%&f/%{island.observer.max::%{island.owner::%player%}%}%&f observers. Upgrade with /is upgrade."
				stop
			else:
				add 1 to {island.observer.amount::%{island.owner::%player%}%}	

on break of observer:
	if player's world is "ul_islands":
		if player's gamemode is survival:
			remove 1 from {island.observer.amount::%{island.owner::%player%}%}			

#
# Placing/breaking for island levels
#

on place of redstone block:
	if player's world is "ul_islands":
		set {_amount} to 1
		if player is sneaking:
			set {_amount} to amount of redstone block in player's inventory
		add 90*{_amount} to {island.level::%{island.owner::%player%}%}
		remove {_amount} of held item from player
		add {_amount} to {island.stack.redstone.amount::%{island.owner::%player%}%}
		if {island.stack.redstone.loc::%{island.owner::%player%}%} is not set:
			set {island.stack.redstone.loc::%{island.owner::%player%}%} to location at event-block
		else:
			cancel event

on break of redstone block:
	if player's world is "ul_islands":
		if player is sneaking:
			cancel event
			remove {island.stack.redstone.amount::%{island.owner::%player%}%}*90 from {island.level::%{island.owner::%player%}%}
			give player {island.stack.redstone.amount::%{island.owner::%player%}%} of event-block
			set {island.stack.redstone.amount::%{island.owner::%player%}%} to 0
			delete {island.stack.redstone.loc::%{island.owner::%player%}%}
			set event-block to air
			stop
		remove 90 from {island.level::%{island.owner::%player%}%}
		remove 1 from {island.stack.redstone.amount::%{island.owner::%player%}%}
		if {island.stack.redstone.amount::%{island.owner::%player%}%} is greater than 0:
			cancel event
			give player 1 of event-block
		else:
			set {island.stack.redstone.amount::%{island.owner::%player%}%} to 0
			delete {island.stack.redstone.loc::%{island.owner::%player%}%}

on place of lapis block:
	if player's world is "ul_islands":
		set {_amount} to 1
		if player is sneaking:
			set {_amount} to amount of lapis block in player's inventory
		add 67*{_amount} to {island.level::%{island.owner::%player%}%}
		remove {_amount} of held item from player
		add {_amount} to {island.stack.lapis.amount::%{island.owner::%player%}%}
		if {island.stack.lapis.loc::%{island.owner::%player%}%} is not set:
			set {island.stack.lapis.loc::%{island.owner::%player%}%} to location at event-block
		else:
			cancel event

on break of lapis block:
	if player's world is "ul_islands":
		if player is sneaking:
			cancel event
			remove {island.stack.lapis.amount::%{island.owner::%player%}%}*67 from {island.level::%{island.owner::%player%}%}
			give player {island.stack.lapis.amount::%{island.owner::%player%}%} of event-block
			set {island.stack.lapis.amount::%{island.owner::%player%}%} to 0
			delete {island.stack.lapis.loc::%{island.owner::%player%}%}
			set event-block to air
			stop
		remove 67 from {island.level::%{island.owner::%player%}%}
		remove 1 from {island.stack.lapis.amount::%{island.owner::%player%}%}
		if {island.stack.lapis.amount::%{island.owner::%player%}%} is greater than 0:
			cancel event
			give player 1 of event-block
		else:
			set {island.stack.lapis.amount::%{island.owner::%player%}%} to 0
			delete {island.stack.lapis.loc::%{island.owner::%player%}%}

on place of coal block:
	if player's world is "ul_islands":
		set {_amount} to 1
		if player is sneaking:
			set {_amount} to amount of coal block in player's inventory
		add 63*{_amount} to {island.level::%{island.owner::%player%}%}
		remove {_amount} of held item from player
		add {_amount} to {island.stack.coal.amount::%{island.owner::%player%}%}
		if {island.stack.coal.loc::%{island.owner::%player%}%} is not set:
			set {island.stack.coal.loc::%{island.owner::%player%}%} to location at event-block
		else:
			cancel event

on break of coal block:
	if player's world is "ul_islands":
		if player is sneaking:
			cancel event
			remove {island.stack.coal.amount::%{island.owner::%player%}%}*63 from {island.level::%{island.owner::%player%}%}
			give player {island.stack.coal.amount::%{island.owner::%player%}%} of event-block
			set {island.stack.coal.amount::%{island.owner::%player%}%} to 0
			delete {island.stack.coal.loc::%{island.owner::%player%}%}
			set event-block to air
			stop
		remove 63 from {island.level::%{island.owner::%player%}%}
		remove 1 from {island.stack.coal.amount::%{island.owner::%player%}%}
		if {island.stack.coal.amount::%{island.owner::%player%}%} is greater than 0:
			cancel event
			give player 1 of event-block
		else:
			set {island.stack.coal.amount::%{island.owner::%player%}%} to 0
			delete {island.stack.coal.loc::%{island.owner::%player%}%}

on place of iron block:
	if player's world is "ul_islands":
		set {_amount} to 1
		if player is sneaking:
			set {_amount} to amount of iron block in player's inventory
		add 616*{_amount} to {island.level::%{island.owner::%player%}%}
		remove {_amount} of held item from player
		add {_amount} to {island.stack.iron.amount::%{island.owner::%player%}%}
		if {island.stack.iron.loc::%{island.owner::%player%}%} is not set:
			set {island.stack.iron.loc::%{island.owner::%player%}%} to location at event-block
		else:
			cancel event

on break of iron block:
	if player's world is "ul_islands":
		if player is sneaking:
			cancel event
			remove {island.stack.iron.amount::%{island.owner::%player%}%}*616 from {island.level::%{island.owner::%player%}%}
			give player {island.stack.iron.amount::%{island.owner::%player%}%} of event-block
			set {island.stack.iron.amount::%{island.owner::%player%}%} to 0
			delete {island.stack.iron.loc::%{island.owner::%player%}%}
			set event-block to air
			stop
		remove 616 from {island.level::%{island.owner::%player%}%}
		remove 1 from {island.stack.iron.amount::%{island.owner::%player%}%}
		if {island.stack.iron.amount::%{island.owner::%player%}%} is greater than 0:
			cancel event
			give player 1 of event-block
		else:
			set {island.stack.iron.amount::%{island.owner::%player%}%} to 0
			delete {island.stack.iron.loc::%{island.owner::%player%}%}

on place of gold block:
	if player's world is "ul_islands":
		set {_amount} to 1
		if player is sneaking:
			set {_amount} to amount of gold block in player's inventory
		add 841*{_amount} to {island.level::%{island.owner::%player%}%}
		remove {_amount} of held item from player
		add {_amount} to {island.stack.gold.amount::%{island.owner::%player%}%}
		if {island.stack.gold.loc::%{island.owner::%player%}%} is not set:
			set {island.stack.gold.loc::%{island.owner::%player%}%} to location at event-block
		else:
			cancel event

on break of gold block:
	if player's world is "ul_islands":
		if player is sneaking:
			cancel event
			remove {island.stack.gold.amount::%{island.owner::%player%}%}*841 from {island.level::%{island.owner::%player%}%}
			give player {island.stack.gold.amount::%{island.owner::%player%}%} of event-block
			set {island.stack.gold.amount::%{island.owner::%player%}%} to 0
			delete {island.stack.gold.loc::%{island.owner::%player%}%}
			set event-block to air
			stop
		remove 841 from {island.level::%{island.owner::%player%}%}
		remove 1 from {island.stack.gold.amount::%{island.owner::%player%}%}
		if {island.stack.gold.amount::%{island.owner::%player%}%} is greater than 0:
			cancel event
			give player 1 of event-block
		else:
			set {island.stack.gold.amount::%{island.owner::%player%}%} to 0
			delete {island.stack.gold.loc::%{island.owner::%player%}%}

on place of diamond block:
	if player's world is "ul_islands":
		set {_amount} to 1
		if player is sneaking:
			set {_amount} to amount of diamond block in player's inventory
		add 2250*{_amount} to {island.level::%{island.owner::%player%}%}
		remove {_amount} of held item from player
		add {_amount} to {island.stack.diamond.amount::%{island.owner::%player%}%}
		if {island.stack.diamond.loc::%{island.owner::%player%}%} is not set:
			set {island.stack.diamond.loc::%{island.owner::%player%}%} to location at event-block
		else:
			cancel event

on break of diamond block:
	if player's world is "ul_islands":
		if player is sneaking:
			cancel event
			remove {island.stack.diamond.amount::%{island.owner::%player%}%}*2250 from {island.level::%{island.owner::%player%}%}
			give player {island.stack.diamond.amount::%{island.owner::%player%}%} of event-block
			set {island.stack.diamond.amount::%{island.owner::%player%}%} to 0
			delete {island.stack.diamond.loc::%{island.owner::%player%}%}
			set event-block to air
			stop
		remove 2250 from {island.level::%{island.owner::%player%}%}
		remove 1 from {island.stack.diamond.amount::%{island.owner::%player%}%}
		if {island.stack.diamond.amount::%{island.owner::%player%}%} is greater than 0:
			cancel event
			give player 1 of event-block
		else:
			set {island.stack.diamond.amount::%{island.owner::%player%}%} to 0
			delete {island.stack.diamond.loc::%{island.owner::%player%}%}

on place of emerald block:
	if player's world is "ul_islands":
		set {_amount} to 1
		if player is sneaking:
			set {_amount} to amount of emerald block in player's inventory
		add 5062*{_amount} to {island.level::%{island.owner::%player%}%}
		remove {_amount} of held item from player
		add {_amount} to {island.stack.emerald.amount::%{island.owner::%player%}%}
		if {island.stack.emerald.loc::%{island.owner::%player%}%} is not set:
			set {island.stack.emerald.loc::%{island.owner::%player%}%} to location at event-block
		else:
			cancel event

on break of emerald block:
	if player's world is "ul_islands":
		if player is sneaking:
			cancel event
			remove {island.stack.emerald.amount::%{island.owner::%player%}%}*5062 from {island.level::%{island.owner::%player%}%}
			give player {island.stack.emerald.amount::%{island.owner::%player%}%} of event-block
			set {island.stack.emerald.amount::%{island.owner::%player%}%} to 0
			delete {island.stack.emerald.loc::%{island.owner::%player%}%}
			set event-block to air
			stop
		remove 5062 from {island.level::%{island.owner::%player%}%}
		remove 1 from {island.stack.emerald.amount::%{island.owner::%player%}%}
		if {island.stack.emerald.amount::%{island.owner::%player%}%} is greater than 0:
			cancel event
			give player 1 of event-block
		else:
			set {island.stack.emerald.amount::%{island.owner::%player%}%} to 0
			delete {island.stack.emerald.loc::%{island.owner::%player%}%}

on place of beacon:
	if player's world is "ul_islands":
		set {_amount} to 1
		if player is sneaking:
			set {_amount} to amount of beacon in player's inventory
		add 50625*{_amount} to {island.level::%{island.owner::%player%}%}
		remove {_amount} of held item from player
		add {_amount} to {island.stack.beacon.amount::%{island.owner::%player%}%}
		if {island.stack.beacon.loc::%{island.owner::%player%}%} is not set:
			set {island.stack.beacon.loc::%{island.owner::%player%}%} to location at event-block
		else:
			cancel event

on left click on beacon:
	if player's world is "ul_islands":
		player's world is "ul_islands"
		if player is sneaking:
			cancel event
			remove {island.stack.beacon.amount::%{island.owner::%player%}%}*50625 from {island.level::%{island.owner::%player%}%}
			give player {island.stack.beacon.amount::%{island.owner::%player%}%} of event-block
			set {island.stack.beacon.amount::%{island.owner::%player%}%} to 0
			delete {island.stack.beacon.loc::%{island.owner::%player%}%}
			set event-block to air
			stop
		remove 50625 from {island.level::%{island.owner::%player%}%}
		remove 1 from {island.stack.beacon.amount::%{island.owner::%player%}%}
		if {island.stack.beacon.amount::%{island.owner::%player%}%} is greater than 0:
			cancel event
			give player 1 of event-block
		else:
			give player 1 of event-block
			set event-block to air
			set {island.stack.beacon.amount::%{island.owner::%player%}%} to 0
			delete {island.stack.beacon.loc::%{island.owner::%player%}%}


on place of end portal frame:
	player's world is "ul_islands"
	set {_amount} to 1
	if player is sneaking:
		set {_amount} to amount of end portal frame in player's inventory
	add 506250*{_amount} to {island.level::%{island.owner::%player%}%}
	remove {_amount} of held item from player
	add {_amount} to {island.stack.endportalframe.amount::%{island.owner::%player%}%}
	if {island.stack.endportalframe.loc::%{island.owner::%player%}%} is not set:
		set {island.stack.endportalframe.loc::%{island.owner::%player%}%} to location at event-block
	else:
		cancel event
on left click on end portal frame:
	player's world is "ul_islands"
	if player is sneaking:
		cancel event
		remove {island.stack.endportalframe.amount::%{island.owner::%player%}%}*506250 from {island.level::%{island.owner::%player%}%}
		give player {island.stack.endportalframe.amount::%{island.owner::%player%}%} of event-block
		set {island.stack.endportalframe.amount::%{island.owner::%player%}%} to 0
		delete {island.stack.endportalframe.loc::%{island.owner::%player%}%}
		set event-block to air
		stop
	remove 506250 from {island.level::%{island.owner::%player%}%}
	remove 1 from {island.stack.endportalframe.amount::%{island.owner::%player%}%}
	if {island.stack.endportalframe.amount::%{island.owner::%player%}%} is greater than 0:
		cancel event
		give player 1 of event-block
	else:
		give player 1 of event-block
		set event-block to air
		set {island.stack.endportalframe.amount::%{island.owner::%player%}%} to 0
		delete {island.stack.endportalframe.loc::%{island.owner::%player%}%}
on right click with command block:
	player's world is "ul_islands"
	set {_amount} to 1
	if player is sneaking:
		set {_amount} to amount of command block in player's inventory
	add 5062500*{_amount} to {island.level::%{island.owner::%player%}%}
	remove {_amount} of held item from player
	add {_amount} to {island.stack.commandblock.amount::%{island.owner::%player%}%}
	if {island.stack.commandblock.loc::%{island.owner::%player%}%} is not set:
		set {_l} to location at event-block
		add 1 to {_l}'s y-coord
		set block at {_l} to command block
		set {island.stack.commandblock.loc::%{island.owner::%player%}%} to {_l}
	else:
		cancel event
on left click on command block:
	player's world is "ul_islands"
	if player is sneaking:
		cancel event
		remove {island.stack.commandblock.amount::%{island.owner::%player%}%}*5062500 from {island.level::%{island.owner::%player%}%}
		give player {island.stack.commandblock.amount::%{island.owner::%player%}%} of event-block
		set {island.stack.commandblock.amount::%{island.owner::%player%}%} to 0
		delete {island.stack.commandblock.loc::%{island.owner::%player%}%}
		set event-block to air
		stop
	remove 5062500 from {island.level::%{island.owner::%player%}%}
	remove 1 from {island.stack.commandblock.amount::%{island.owner::%player%}%}
	if {island.stack.commandblock.amount::%{island.owner::%player%}%} is greater than 0:
		cancel event
		give player 1 of event-block
	else:
		give player 1 of event-block
		set event-block to air
		set {island.stack.commandblock.amount::%{island.owner::%player%}%} to 0
		delete {island.stack.commandblock.loc::%{island.owner::%player%}%}

command /efly:
	trigger:
		if player's gamemode is creative:
			if player's flight mode is false:
				set player's flight mode to true
				message "{@tag} &fYou have activated flight!"
				play sound "ENTITY_BAT_TAKEOFF" with volume 0.5 to the player
			else if player's flight mode is true:
				set player's flight mode to false
				message "{@tag} &fYou have deactivated flight!"
			stop
		if player does not have permission "essentials.fly":
			if {island.fly::%{island.owner::%player%}%} is 0:
				message "{@tag} &fYou must buy fly with &o/is upgrades or purchase at least Sapphire rank on with &o/buy to access flight."
			else:
				if player's world is "ul_islands":
					if player's flight mode is false:
						set player's flight mode to true
						message "{@tag} &fYou have activated flight!"
						play sound "ENTITY_BAT_TAKEOFF" with volume 0.5 to the player
					else if player's flight mode is true:
						set player's flight mode to false
						message "{@tag} &fYou have deactivated flight!"
				else:
					message "{@tag} &fYou can only fly at your island!"
		else:
			if player's world is "ul_islands":
				if player's flight mode is false:
					set player's flight mode to true
					message "{@tag} &fYou have activated flight!"
					play sound "ENTITY_BAT_TAKEOFF" with volume 0.5 to the player
				else if player's flight mode is true:
					set player's flight mode to false
					message "{@tag} &fYou have deactivated flight!"
			else:
				message "{@tag} &fYou can only fly at your island!"

command /fly:
	trigger:
		if player's gamemode is creative:
			if player's flight mode is false:
				set player's flight mode to true
				message "{@tag} &fYou have activated flight!"
				play sound "ENTITY_BAT_TAKEOFF" with volume 0.5 to the player
			else if player's flight mode is true:
				set player's flight mode to false
				message "{@tag} &fYou have deactivated flight!"
			stop
		if player does not have permission "essentials.fly":
			if {island.fly::%{island.owner::%player%}%} is 0:
				message "{@tag} &fYou must buy fly with &o/is upgrades or purchase at least Sapphire rank on with &o/buy to access flight."
			else:
				if player's world is "ul_islands":
					if player's flight mode is false:
						set player's flight mode to true
						message "{@tag} &fYou have activated flight!"
						play sound "ENTITY_BAT_TAKEOFF" with volume 0.5 to the player
					else if player's flight mode is true:
						set player's flight mode to false
						message "{@tag} &fYou have deactivated flight!"
				else:
					message "{@tag} &fYou can only fly at your island!"
		else:
			if player's world is "ul_islands":
				if player's flight mode is false:
					set player's flight mode to true
					message "{@tag} &fYou have activated flight!"
					play sound "ENTITY_BAT_TAKEOFF" with volume 0.5 to the player
				else if player's flight mode is true:
					set player's flight mode to false
					message "{@tag} &fYou have deactivated flight!"
			else:
				message "{@tag} &fYou can only fly at your island!"

#on inventory click:
#	inventory name of current inventory of player is "&8Confirm Island Reset":
#		clicked slot is 22:
#			cancel event
#			send "hi"
#			make player execute command "/spawn"
#			delete {island.origin::%player%}
#			delete {island.members.%player%::*}
#			delete {island.level::%{island.owner::%player%}%}
#			delete {island.owner::%player%}
#			delete {island.home::%player%}
#			delete {bound.center::%player%}
#			loop all entities where [input is an armor stand]:
#				dostuff(player, loop-entity, "disable")
#				deleteowner(player, loop-entity)
#			set {island.stack.redstone.amount::%{island.owner::%player%}%} to 0
#			set {island.stack.lapis.amount::%{island.owner::%player%}%} to 0
#			set {island.stack.coal.amount::%{island.owner::%player%}%} to 0
#			set {island.stack.iron.amount::%{island.owner::%player%}%} to 0
#			set {island.stack.gold.amount::%{island.owner::%player%}%} to 0
#			set {island.stack.diamond.amount::%{island.owner::%player%}%} to 0
#			set {island.stack.emerald.amount::%{island.owner::%player%}%} to 0
#			set {island.stack.spawner.amount::%{island.owner::%player%}%} to 0
#			set {island.stack.endportalframe.amount::%{island.owner::%player%}%} to 0
#			send "{@tag} &f%player% has deleted the island." to {island.members.%player%::*}
			#remove player from {island.members.%player%::*}
			#loop {island.members.%player%::*}:
			#	make loop-value execute command "/spawn"
			#	delete {island.origin::%loop-value%}
			#	delete {island.owner::%loop-value%}
			#	delete {island.home::%loop-value%}
			#	remove loop-value from {island.members.%player%::*}

function regex(n: object) :: text:
    if "%{_n}%" contains ".":
        set {_s::*} to split "%{_n}%" at "."
        set {_n} to "%a({_s::1})%.%last 2 characters of {_s::2}%"
        return "%{_n}%"
    else:
        set {_n} to a("%{_n}%")
        return "%{_n} ? 0%"
function a(b: text) :: text:
    if length of {_b} > 3:
        return "%a(first length of {_b} - 3 characters of {_b})%,%last 3 characters of {_b}%"
    return {_b}

function unformat(t: text) :: number:
    set {_v} to ""
    set {_data} to "Q,15|T,12|B,9|M,6|k,3"
    loop split {_data} at "|":
        set {_s::*} to split loop-value at ","
        set {_d::%{_s::1}%} to {_s::2} parsed as number
    loop split {_t} at "":
        if {_d::%loop-value%} is set:
            add {_d::%loop-value%} to {_n}
        else:
            set {_v} to "%{_v}%%loop-value%"
    return ({_v} parsed as number) * 10^{_n}

function island_placeParticles(player: player, loc: location, bound: bound):
	if {border::type} is not set:
		set {border::type} to "particle"
	if {border::material} is not set:
		set {border::material} to red stained glass
	if {border::color} is not set:
		set {border::color} to "red"
	set {_loops} to 0
	loop all blocks in radius 4 of {_loc}:
		location of loop-block is not within {_bound}
		set {_bool} to false
		set {_block} to location 1 north of loop-block
		if {_block} is within {_bound}:
			set {_bool} to true
		set {_block} to location 1 south of loop-block
		if {_block} is within {_bound}:
			set {_bool} to true
		set {_block} to location 1 east of loop-block
		if {_block} is within {_bound}:
			set {_bool} to true
		set {_block} to location 1 west of loop-block
		if {_block} is within {_bound}:
			set {_bool} to true
		{_bool} is true

		if {border::type} is "particle":
			if {border::color} is "red":
				play 1 of dust using dustOption(red, 2) at loop-block for {_player}
			else if {border::color} is "orange":
				play 1 of dust using dustOption(orange, 2) at loop-block for {_player}
			else if {border::color} is "yellow":
				play 1 of dust using dustOption(yellow, 2) at loop-block for {_player}
			else if {border::color} is "lime":
				play 1 of dust using dustOption(lime, 2) at loop-block for {_player}
			else if {border::color} is "light blue":
				play 1 of dust using dustOption(light blue, 2) at loop-block for {_player}
			else if {border::color} is "barrier":
				play 1 of barrier at loop-block for {_player}
			else if {border::color} is "flame":
				play 1 of flame at loop-block offset by vector(0, 0, 0) with extra 0 for {_player}
			else if {border::color} is "firework":
				play 1 of firework at loop-block offset by vector(0, 0, 0) with extra 0 for {_player}
			else:
				play 1 of dust using dustOption(red, 2) at loop-block for {_player}
		else:
			set loop-block to {border::material}

		add 1 to {_loops}
		{_loops} is 5
		set {_loops} to 0
		wait 1 tick
	wait 2 seconds
	if {border::type} is "block":
		set {_loops} to 0
		loop all blocks in radius 4 of {_loc}:
			location of loop-block is not within {_bound}
			loop-block is {border::material}
			set loop-block to air
			add 1 to {_loops}
			{_loops} is 5
			set {_loops} to 0
			wait 1 tick



on damage of player:
	damage cause is fall or void:
		cancel event

on swap hand items:
	cancel event

on place of spawner:
	if name of player's tool contains "&7&o(1x)":
		set {_s} to uncolored name of player's tool
		replace all " (1x)" with "" in {_s}
		set event-block's entity type to {_s} parsed as entity type

#on bound exit: 
#	if event-player's world != "ul_spawn":
#		if event-bound = {bound.%event-player%}:
#			if event-player has permission "premiums.bound.bypass":
#				stop	
#			else:
#				set {_loc.%event-player%} to location of event-player
#				set {_v} to vector from event-player to {bound.center::%event-player%}
#				push event-player {_v} at speed 0.75					
#				#push loop-player (direction from loop-player to location of {bound.center::%loop-player%}) at speed 0.45
#				island_placeParticles(event-player, {_loc.%event-player%}, {bound.%event-player%})
#				send action bar "&eYou cannot leave this island!" to event-player
#				play sound "entity.enderman.hurt" with volume 0.5 for event-player	

#on right click on chest or trapped chest or hopper or anvil or furnace or lever or button or door or repeater or comparator:
#	if player's world is "ul_islands":
#		if player doesn't have permission "premiums.staff":
#			if {island.owner::%player%} is set:
#				set {_b} to bound from id "%{island.owner::%player%}%"
#				if {bound.%player%} isn't {_b}:
#					send action bar "&eYou cannot use that here." to player
#					cancel event
#					if clicked block is chest or trapped chest or furnace:
#						wait 0.5 seconds
#						close player's inventory
#						stop
#
#on right click on spawner:
#	if player is sneaking:
#		if player's world is "ul_islands":
#			if player doesn't have permission "premiums.staff":
#				if {island.owner::%player%} is set:
#					set {_b} to bound from id "%{island.owner::%player%}%"
#					if {bound.%player%} isn't {_b}:
#						send action bar "&eYou cannot use that here." to player
#						cancel event
#
#on break:
#	if player's world is "ul_islands":
#		if player doesn't have permission "premiums.staff":
#			if {island.owner::%player%} is set:
#				set {_b} to bound from id "%{island.owner::%player%}%"
#				if {bound.%player%} isn't {_b}:
#					send action bar "&eYou cannot break that here." to player
#					cancel event
#					stop
#
#on place:
#	if player's world is "ul_islands":
#		if player doesn't have permission "premiums.staff":
#			if {island.owner::%player%} is set:
#				set {_b} to bound from id "%{island.owner::%player%}%"
#				if {bound.%player%} isn't {_b}:
#					send action bar "&eYou cannot place that here." to player
#					cancel event
#					stop
