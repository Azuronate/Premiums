#(robotc.sk)

options:
	tag: &e&lSKYBLOCK &7¬&f

#
# Opening menu
#

function openmainmenu(p:player, stand:entity):
	create a gui with virtual chest inventory with 5 rows named "Robot Menu":
		make gui slot 4 with skull of {_p} named "&e&lROBOT" with lore "" and "&fType: %{type.%{_stand}%}%" and "&fColor: %{color.%{_stand}%}%" and "" and "&7&o(( Click to view ))":
			close inventory for {_p}
			message "&7Owner: &3%{owner.%{_stand}%}%" to player
			message "&7Fortune: &3%{fortune.%{_stand}%}%" to player
			message "&7Speed: &3%{speed.%{_stand}%}%" to player
			message "&7Gold: &3%{gold.%{_stand}%}%" to player
			message "&7Luck: &3%{luck.%{_stand}%}%" to player
			message "&7Location: &3%{location::%{_stand}%}%" to player
			message "&7Allowed to mine: &3%{mining.%player's uuid%.%{_stand}%}%" to player
			message "&7Waiting to mine: &3%{waiting.%{_stand}%}%" to player
		make gui slot 0 and 1 and 2 and 3 and 5 and 6 and 7 and 8 and 9 and 17 and 18 and 26 and 27 and 35 and 36 and 37 and 38 and 39 and 40 and 41 and 42 and 43 and 44 with {colorg.%{_stand}%} named "&7Customize Color" with lore "" and "&7&o(( Left-Click to view ))":
			colors({_p}, {_stand})
		make gui slot 24 with arrow named "&e&lROTATION" with lore "" and "&fRotate your robot towards" and "&fthe direction you want" and "&fit to mine." and "" and "&7&o(( Click to view ))":
			rotation({_p}, {_stand})
		make gui slot 22 with chest named "&e&lCOLLECT" with lore "" and "&fItems %{itemcount::%{_stand}%}%/%{itemmax::%{_stand}%}%" and "" and "&7&o(( Left-Click to collect ))":
			collect({_p}, {_stand})
		if {type.%{_stand}%} is "MINER":
			set {_upgrades} to diamond pickaxe without nbt named "&e&lUPGRADES" with lore "" and "&fSpend your hard earned" and "&fgems to further upgrade" and "&fyour robot." and "" and "&7&o(( Left-Click to view ))"
			make gui slot 20 with {_upgrades}:
				upgrades({_p}, {_stand})
			if {fortune.%{_stand}%} is 3:
				if {speed.%{_stand}%} is 3:
					if {luck.%{_stand}%} is 3:
						if {gold.%{_stand}%} is 3:				
							make gui slot 20 with shiny diamond pickaxe without nbt named "&e&lUPGRADES" with lore "" and "&fSpend your hard earned" and "&fgems to further upgrade" and "&fyour robot." and "" and "&7&o(( Left-Click to view ))":
								upgrades({_p}, {_stand})
		#if {type.%{_stand}%} is "FARMER":
		#	make gui slot 20 with diamond hoe without nbt named "&6&lUPGRADES":
		#		upgrades({_p}, {_stand})
		#	if {fortune.%{_stand}%} is 3:
		#		if {soil.%{_stand}%} is 3:
		#			make gui slot 20 with shiny diamond pickaxe without nbt named "&6&lUPGRADES":
		#				upgrades({_p}, {_stand})
		make gui slot 10 and 11 and 12 and 13 and 14 and 15 and 16 and 19 and 21 and 23 and 25 and 28 and 29 and 30 and 31 and 32 and 33 and 34 with light gray glass pane named "&7" 
	open gui last gui to {_p}


on right click on armor stand:
	set {_nbt} to nbt of clicked entity
	if {_nbt} contains "Small:1b":
		cancel event
		if player's tool is not red dye, black dye, blue dye, green dye, cyan dye, purple dye, gray dye, light blue dye, lime dye, magenta dye, yellow dye, brown dye, orange dye, pink dye or white dye:
			set {_stand} to clicked entity
			loop {locations::%player's uuid%::*}:
				if {locations::%player's uuid%::*} contains {_stand}'s location:	
					if player is sneaking:
						collect(player, {_stand})
						stop
					if {type.%{_stand}%} is "MINER":
						openmainmenu(player, {_stand})
					if {type.%{_stand}%} is "FARMER":
						openmainmenu(player, {_stand})
				#loop {island.members.%{island.owner::%player%}%::*}:
				#	if {island.members.%{island.owner::%player%}%::*} contains {owner.%{_stand}%}:
				#		if player is sneaking:
				#			collect(player, {_stand})
				#			stop						
				if {locations::%player's uuid%::*} doesn't contain {_stand}'s location:
					if player has permission "premiums.staff":
						if player is sneaking:
							message "&7Owner: &3%{owner.%{_stand}%}%" to player
							message "&7Fortune: &3%{fortune.%{_stand}%}%" to player
							message "&7Speed: &3%{speed.%{_stand}%}%" to player
							message "&7Gold: &3%{gold.%{_stand}%}%" to player
							message "&7Luck: &3%{luck.%{_stand}%}%" to player
							message "&7Location: &3%{location::%{_stand}%}%" to player
							message "&7Allowed to mine: &3%{mining.%player's uuid%.%{_stand}%}%" to player
							message "&7Waiting to mine: &3%{waiting.%{_stand}%}%" to player
							stop
					else:
						message "<##696969>&lROBOT &7¬ &FThis robot is owned by &o%{owner.%{_stand}%}%&r&f." to player
						stop
		if player's tool is red dye:	
			colorset(player, {_e}, red wool, red stained glass pane,  "RED", "c", "&c&lRED", "&c⬛", 12, 16733525)
			set {r1.%{_e}%} to 255
			set {r2.%{_e}%} to 85
			set {r3.%{_e}%} to 85
			stop
		if player's tool is orange dye:
			colorset(player, {_e}, orange wool, orange stained glass pane, "ORANGE", "<##F9801D>", "<##F9801D>&lORANGE", "<##F9801D>⬛", 13, 16351261)
			set {r1.%{_e}%} to 249
			set {r2.%{_e}%} to 128
			set {r3.%{_e}%} to 29
			stop	
		if player's tool is yellow dye:
			colorset(player, {_e}, yellow wool, yellow stained glass pane, "YELLOW", "e", "&e&lYELLOW", "&e⬛", 14, 16777045)
			set {r1.%{_e}%} to 255
			set {r2.%{_e}%} to 255
			set {r3.%{_e}%} to 85
			stop
		if player's tool is lime dye:
			colorset(player, {_e}, lime wool, lime stained glass pane,  "LIME", "a", "&a&lLIME", "&a⬛", 15, 5635925)
			set {r1.%{_e}%} to 85
			set {r2.%{_e}%} to 255
			set {r3.%{_e}%} to 85
			stop
		if player's tool is green dye:
			colorset(player, {_e}, green wool, green stained glass pane,  "GREEN", "2", "&2&lGREEN", "&2⬛", 16, 43520)
			set {r1.%{_e}%} to 0
			set {r2.%{_e}%} to 170
			set {r3.%{_e}%} to 0
			stop
		if player's tool is blue dye:
			colorset(player, {_e}, blue wool, blue stained glass pane,  "BLUE", "1", "&1&lBLUE", "&1⬛", 21, 3949738)
			set {r1.%{_e}%} to 60
			set {r2.%{_e}%} to 68
			set {r3.%{_e}%} to 170
			stop
		if player's tool is cyan dye:
			colorset(player, {_e}, cyan wool, cyan stained glass pane, "CYAN", "3", "&3&lCYAN", "&3⬛", 22, 43690)
			set {r1.%{_e}%} to 0
			set {r2.%{_e}%} to 170
			set {r3.%{_e}%} to 170
			stop
		if player's tool is light blue dye:
			colorset(player, {_e}, light blue wool, light blue stained glass pane, "LIGHT BLUE", "b", "&b&lLIGHT BLUE", "&b⬛", 23, 3847130)
			set {r1.%{_e}%} to 85
			set {r2.%{_e}%} to 255
			set {r3.%{_e}%} to 255
			stop
		if player's tool is purple dye:
			colorset(player, {_e}, purple wool, purple stained glass pane, "PURPLE", "5", "&5&lPURPLE", "&5⬛", 24, 11141290)	
			set {r1.%{_e}%} to 170
			set {r2.%{_e}%} to 0
			set {r3.%{_e}%} to 170
			stop
		if player's tool is magenta dye:
			colorset(player, {_e}, magenta wool, magenta stained glass pane, "MAGENTA", "d", "&d&lMAGENTA", "&d⬛", 25, 16733695)
			set {r1.%{_e}%} to 255
			set {r2.%{_e}%} to 85
			set {r3.%{_e}%} to 255
			stop
		if player's tool is pink dye:
			colorset(player, {_e}, pink wool, pink stained glass pane, "PINK", "<##F38BAA>", "<##F38BAA>&lPINK", "<##F38BAA>⬛", 30, 15961002)
			set {r1.%{_e}%} to 243
			set {r2.%{_e}%} to 139
			set {r3.%{_e}%} to 170
			stop
		if player's tool is black dye:
			colorset(player, {_e}, black wool, black stained glass pane, "BLACK", "0", "&0&lBLACK", "&0⬛", 31, 0)
			set {r1.%{_e}%} to 0
			set {r2.%{_e}%} to 0
			set {r3.%{_e}%} to 0
			stop
		if player's tool is gray dye:
			colorset(player, {_e}, gray wool, gray stained glass pane, "GRAY", "7", "&7&lGRAY", "&7⬛", 32, 11447982)
			set {r1.%{_e}%} to 170
			set {r2.%{_e}%} to 170
			set {r3.%{_e}%} to 170
			stop
		if player's tool is white dye:
			colorset(player, {_e}, white wool, white stained glass pane, "WHITE", "f", "&f&lWHITE", "&f⬛", 33, 16777215)
			set {r1.%{_e}%} to 255
			set {r2.%{_e}%} to 255
			set {r3.%{_e}%} to 255
			stop
		if player's tool is brown dye:
			colorset(player, {_e}, brown wool, brown stained glass pane, "BROWN", "<##835432>", "<##835432>&lBROWN", "<##835432>⬛", 34, 8606770)
			set {r1.%{_e}%} to 131
			set {r2.%{_e}%} to 84
			set {r3.%{_e}%} to 50
			stop


#
# Colors function
#

function colorset(p:player, e:entity, name:item, guiglass:item, namecap:text, namesingle:text, guiname:text, guisquare:text, slotid:number, nbtid:number):	
	set {_lore} to "&%{_namesingle}%"
	if {_namesingle} is "<##835432>" or "<##F38BAA>" or "<##F9801D>":
		set {_lore} to "%{_namesingle}%"	
	set {color.%{_e}%} to "%{_guisquare}%"
	set {color.id.%{_e}%} to "%{_namesingle}%"
	set {color.lore.%{_e}%} to "%{_lore}%&l┃ "
	set {slotid.%{_e}%} to {_slotid}
	set {colorguiname.%{_e}%} to "%{_guiname}%"
	set {colorcg.%{_e}%} to {_name}
	set {colorg.%{_e}%} to {_guiglass}
	set {selected.%{colorg.%{_e}%}%} to true
	add "{ArmorItems:[{id:""minecraft:leather_boots"",Count:1b,tag:{display:{color:%{_nbtid}%}}},{id:""minecraft:leather_leggings"",Count:1b,tag:{display:{color:%{_nbtid}%}}},{id:""minecraft:leather_chestplate"",Count:1b,tag:{display:{color:%{_nbtid}%}}},{id:player_head,tag:{SkullOwner:""%{_p}%""},Count:1}]}" to nbt of {_e}


function colors(p:player, e:entity):
	create a gui with id "%{_p}%" with virtual chest inventory with 6 rows named "Colors":

		make gui slot 10 with skull of {_p} named "&e&l%{_p}%"
		set {_chest} to leather chestplate 
		dye {_chest} rgb({r1.%{_e}%}, {r2.%{_e}%}, {r3.%{_e}%})
		make gui slot 19 with {_chest} named "&7" with all flags hidden 
		set {_leg} to leather leggings
		dye {_leg} rgb({r1.%{_e}%}, {r2.%{_e}%}, {r3.%{_e}%})
		make gui slot 28 with {_leg} named "&7" with all flags hidden 
		set {_boot} to leather boots
		dye {_boot} rgb({r1.%{_e}%}, {r2.%{_e}%}, {r3.%{_e}%})
		make gui slot 37 with {_boot} named "&7" with all flags hidden 
		make gui slot 0 and 1 and 2 and 3 and 4 and 5 and 6 and 7 and 8 and 9 and 11 and 17 and 18 and 20 and 26 and 27 and 29 and 35 and 36 and 38 and 44 and 45 and 46 and 47 and 48 and 50 and 51 and 52 and 53 with {colorg.%{_e}%} named "&7" 
		make gui slot 39 and 40 and 41 and 42 and 43 with light gray stained glass pane named "&7"  
		back(49, {_p}, barrier, "&cMain Menu", {_e}, "%{_p}%")
		#make gui slot 12 and 13 and 14 and 15 and 16 and 17 and 18 and 19 and 20 and 21 and 23 and 24 and 25 and 26 with light gray glass pane named "&7" 
		#back(22, {_p}, barrier, "&cMain Menu", {_e}, "Robot/Color")
		make gui slot 12 with red wool named "&c&lRED":
			colorset({_p}, {_e}, red wool, red stained glass pane,  "RED", "c", "&c&lRED", "&c⬛", 12, 16733525)
			set {r1.%{_e}%} to 255
			set {r2.%{_e}%} to 85
			set {r3.%{_e}%} to 85
			colors({_p}, {_e})
		make gui slot 13 with orange wool named "<##F9801D>&lORANGE":
			colorset({_p}, {_e}, orange wool, orange stained glass pane, "ORANGE", "<##F9801D>", "<##F9801D>&lORANGE", "<##F9801D>⬛", 13, 16351261)
			set {r1.%{_e}%} to 249
			set {r2.%{_e}%} to 128
			set {r3.%{_e}%} to 29
			colors({_p}, {_e})
		make gui slot 14 with yellow wool named "&e&lYELLOW":
			colorset({_p}, {_e}, yellow wool, yellow stained glass pane, "YELLOW", "e", "&e&lYELLOW", "&e⬛", 14, 16777045)
			set {r1.%{_e}%} to 255
			set {r2.%{_e}%} to 255
			set {r3.%{_e}%} to 85
			colors({_p}, {_e})
		make gui slot 15 with lime wool named "&a&lLIME":
			colorset({_p}, {_e}, lime wool, lime stained glass pane,  "LIME", "a", "&a&lLIME", "&a⬛", 15, 5635925)
			set {r1.%{_e}%} to 85
			set {r2.%{_e}%} to 255
			set {r3.%{_e}%} to 85
			colors({_p}, {_e})
		make gui slot 16 with green wool named "&2&lGREEN":
			colorset({_p}, {_e}, green wool, green stained glass pane,  "GREEN", "2", "&2&lGREEN", "&2⬛", 16, 43520)
			set {r1.%{_e}%} to 0
			set {r2.%{_e}%} to 170
			set {r3.%{_e}%} to 0
			colors({_p}, {_e})
		make gui slot 21 with blue wool named "&1&lBLUE":
			colorset({_p}, {_e}, blue wool, blue stained glass pane,  "BLUE", "1", "&1&lBLUE", "&1⬛", 21, 3949738)
			set {r1.%{_e}%} to 60
			set {r2.%{_e}%} to 68
			set {r3.%{_e}%} to 170
			colors({_p}, {_e})
		make gui slot 22 with cyan wool named "&3&lCYAN":
			colorset({_p}, {_e}, cyan wool, cyan stained glass pane, "CYAN", "3", "&3&lCYAN", "&3⬛", 22, 43690)
			set {r1.%{_e}%} to 0
			set {r2.%{_e}%} to 170
			set {r3.%{_e}%} to 170
			colors({_p}, {_e})
		make gui slot 23 with light blue wool named "&b&lLIGHT BLUE":
			colorset({_p}, {_e}, light blue wool, light blue stained glass pane, "LIGHT BLUE", "b", "&b&lLIGHT BLUE", "&b⬛", 23, 3847130)
			set {r1.%{_e}%} to 85
			set {r2.%{_e}%} to 255
			set {r3.%{_e}%} to 255
			colors({_p}, {_e})
		make gui slot 24 with purple wool named "&5&lPURPLE":
			colorset({_p}, {_e}, purple wool, purple stained glass pane, "PURPLE", "5", "&5&lPURPLE", "&5⬛", 24, 11141290)	
			set {r1.%{_e}%} to 170
			set {r2.%{_e}%} to 0
			set {r3.%{_e}%} to 170
			colors({_p}, {_e})
		make gui slot 25 with magenta wool named "&d&lMAGENTA":
			colorset({_p}, {_e}, magenta wool, magenta stained glass pane, "MAGENTA", "d", "&d&lMAGENTA", "&d⬛", 25, 16733695)
			set {r1.%{_e}%} to 255
			set {r2.%{_e}%} to 85
			set {r3.%{_e}%} to 255
			colors({_p}, {_e})
		make gui slot 30 with pink wool named "<##F38BAA>&lPINK":
			colorset({_p}, {_e}, pink wool, pink stained glass pane, "PINK", "<##F38BAA>", "<##F38BAA>&lPINK", "<##F38BAA>⬛", 30, 15961002)
			set {r1.%{_e}%} to 243
			set {r2.%{_e}%} to 139
			set {r3.%{_e}%} to 170
			colors({_p}, {_e})									
		make gui slot 31 with black wool named "&0&lBLACK":
			colorset({_p}, {_e}, black wool, black stained glass pane, "BLACK", "0", "&0&lBLACK", "&0⬛", 31, 0)
			set {r1.%{_e}%} to 0
			set {r2.%{_e}%} to 0
			set {r3.%{_e}%} to 0
			colors({_p}, {_e})		
		make gui slot 32 with gray wool named "&7&lGRAY":
			colorset({_p}, {_e}, gray wool, gray stained glass pane, "GRAY", "7", "&7&lGRAY", "&7⬛", 32, 11447982)
			set {r1.%{_e}%} to 170
			set {r2.%{_e}%} to 170
			set {r3.%{_e}%} to 170
			colors({_p}, {_e})
		make gui slot 33 with white wool named "&f&lWHITE":
			colorset({_p}, {_e}, white wool, white stained glass pane, "WHITE", "f", "&f&lWHITE", "&f⬛", 33, 16777215)
			set {r1.%{_e}%} to 255
			set {r2.%{_e}%} to 255
			set {r3.%{_e}%} to 255
			colors({_p}, {_e})
		make gui slot 34 with brown wool named "<##835432>&lBROWN":
			colorset({_p}, {_e}, brown wool, brown stained glass pane, "BROWN", "<##835432>", "<##835432>&lBROWN", "<##835432>⬛", 34, 8606770 )
			set {r1.%{_e}%} to 131
			set {r2.%{_e}%} to 84
			set {r3.%{_e}%} to 50
			colors({_p}, {_e})			
		if {selected.%{colorg.%{_e}%}%} is true:
			make gui slot {slotid.%{_e}%} with shiny {colorcg.%{_e}%} named "%{colorguiname.%{_e}%}%" 
	open gui last gui to {_p}


#
# Roation Function
#

function rotationapply(p:player, e:entity, rotation:number, namelower:text, namecap:text, slotid:number):
	set {_uuid} to uuid of {_p}
	remove {_e}'s location from {locations::%{_uuid}%::*}
	add "{Rotation:[%{_rotation}%f,0f]}" to nbt of {_e}
	set yaw of {_l} to {_rotation}
	set {_l} to {_e}'s location
	add {_l} to {locations::%{_uuid}%::*}
	set {directiongui.%{_e}%} to {_namelower}
	set {dirn.%{_e}%} to "&e&l%{_namecap}%"
	set {dirs.%{_e}%} to {_slotid}
	set {selected.%{directiongui.%{_e}%}%} to true	

function rotation(p:player, e:entity):
	create a gui with id "%{_p}%" with virtual chest inventory with 3 rows named "Directions":
		make gui slot 10 with arrow named "&e&lNORTH":
			rotationapply({_p}, {_e}, 180, "north", "NORTH", 10)
			rotation({_p}, {_e})
		make gui slot 12 with arrow named "&e&lEAST":
			rotationapply({_p}, {_e}, 270, "east", "EAST", 12)
			rotation({_p}, {_e})
		make gui slot 14 with arrow named "&e&lSOUTH":
			rotationapply({_p}, {_e}, 0, "south", "SOUTH", 14)
			rotation({_p}, {_e})
		make gui slot 16 with arrow named "&e&lWEST":
			rotationapply({_p}, {_e}, 90, "west", "WEST", 16)
			rotation({_p}, {_e})
		if {selected.%{directiongui.%{_e}%}%} is true:
			make gui slot {dirs.%{_e}%} with shiny arrow named "%{dirn.%{_e}%}%" 
		make gui slot 11 and 13 and 15 with light gray glass pane named "&7" 
		make gui slot 0 and 1 and 2 and 3 and 4 and 5 and 6 and 7 and 8 and 9 and 17 and 18 and 19 and 20 and 21 and 23 and 24 and 25 and 26 with {colorg.%{_e}%} named "&0" 
		back(22, {_p}, barrier, "&cMain Menu", {_e}, "%{_p}%")	
	open gui last gui to {_p}


#
# Collecting 
#

function collect(p:player, e:entity):
	if {inv::%{_e}%::*} isn't set:
		send "<##696969>&lROBOT &7¬ &FYour Robot has nothing!" to {_p}
		stop
	loop {inv::%{_e}%::*}:
		if {_p} doesn't have enough space for 1 of loop-value:
			message "<##696969>&lROBOT &7¬ &FYou do not have enough inventory space available!" to {_p}
			stop
		else:
			give {_p} {inv::%{_e}%::*}
			set {itemcount::%{_e}%} to 0
			clear {inv::%{_e}%::*}
			loop all items in {_p}'s inventory:
				if loop-item is raw iron:
					set loop-item to iron ingot 
				if loop-item is raw gold:
					set loop-item to gold ingot 
			send "<##696969>&lROBOT &7¬ &FEmptied Robot's Inventory." to {_p}
			updateholo({_e})
			#set {_r} to random integer between 1 and 100
			#make console execute command "/eco give %{_p}% %{_e}%"
			close inventory for {_p}
	if {gold.%{_e}%} is 1:
		chance of 3%:
			set {_r} to random integer between 100 and 1000
			make console execute command "/eco give %{_p}% %{_r}%"
	if {gold.%{_e}%} is 2:
		chance of 6%:
			set {_r} to random integer between 1000 and 1500
			make console execute command "/eco give %{_p}% %{_r}%"
	if {gold.%{_e}%} is 3:
		chance of 9%:
			set {_r} to random integer between 1500 and 2000
			make console execute command "/eco give %{_p}% %{_r}%"
	stop


#
# Upgrades function
#

function upgradeapply(p:player, e:entity, mtype:text, utype:text, lvl:number, gui:text):
	edit gui with id "%{_gui}%":
		set {_uuid} to uuid of {_p}
		if {_mtype} is "miner":
			if {_utype} contains "fortune":
				if {_lvl} is 0:
					make gui slot 10 with diamond pickaxe without nbt named "&e&lFORTUNE &7(Purchase)" with lore "" and "&fOccasionally earn extra" and "&fdrops when ores are mined." and "" and "&fCost: 150 Gems" and "&fLvl: %{fortune.%{_e}%}% &f➡ 1" and "" and "&7&o(( Left-Click to upgrade ))":
						if {gems::%{_uuid}%} is greater than or equal to 150:
							remove 150 from {gems::%{_uuid}%}	
							send "{@tag} &fYour island now has fly!"		
							play sound "minecraft:entity.villager.work_toolsmith" at volume 4 at pitch 1 to {_p}
							set {_fortune} to 1
							replace all "Fortune " with "" in {_fortune}						
							enchant tool of {_e} with "fortune 1" parsed as enchantment type
							set {fortune.%{_e}%} to 1
							upgrades({_p}, {_e})
							stop	
						else:
							if {gems::%{_uuid}%} is less than 150:
								send "{@tag} &fSorry you don't have enough gems to upgrade!"		
								stop			
				if {_lvl} is 3:
					make gui slot 10 with shiny diamond pickaxe without nbt named "&e&lFORTUNE &7(Level 3)" with lore "" and "&fOccasionally earn extra" and "&fdrops when ores are mined." and "" and "&cMaximum Upgrade Reached!" 
				if {_lvl} is 1 or 2:
					set {_lvlup} to ({_lvl} + 1)
					set {_cost-fortune} to (150 * {_lvl})
					make gui slot 10 with diamond pickaxe without nbt named "&e&lFORTUNE &7(Level %{fortune.%{_e}%}%&7)" with lore "" and "&fOccasionally earn extra" and "&fdrops when ores are mined." and "" and "&fCost: %{_cost-fortune}% Gems" and "&fLvl: %{fortune.%{_e}%}% &f➡ %{_lvlup}%" and "" and "&7&o(( Left-Click to upgrade ))":						
						if {gems::%{_uuid}%} is greater than or equal to {_cost-fortune}:
							remove {_cost-fortune} from {gems::%{_uuid}%}
							play sound "minecraft:entity.villager.work_toolsmith" at volume 4 at pitch 1 to {_p}
							enchant tool of {_e} with "fortune %{_lvlup}%" parsed as enchantment type
							set {fortune.%{_e}%} to {_lvlup}
							upgrades({_p}, {_e})
							stop
						else:
							if {gems::%{_uuid}%} is less than {_cost-fortune}:
								send "{@tag} &fSorry you don't have enough gems to upgrade!"		
								stop								
			if {_utype} contains "speed":
				if {_lvl} is 0:
					make gui slot 12 with feather named "&e&lSPEED &7(Purchase)" with lore "" and "&fReduce the length of time" and "&fbetween each block mined." and "" and "&fCost: 150 Gems" and "&fLvl: %{speed.%{_e}%}% &f➡ 1" and "" and "&7&o(( Left-Click to upgrade ))":
						if {gems::%{_uuid}%} is greater than or equal to 150:
							remove 150 from {gems::%{_uuid}%}	
							play sound "minecraft:entity.villager.work_toolsmith" at volume 4 at pitch 1 to {_p}
							set {speed.%{_e}%} to 1
							upgrades({_p}, {_e})
							stop
						else:
							if {gems::%{_uuid}%} is less than 150:
								send "{@tag} &fSorry you don't have enough gems to upgrade!"		
								stop	
				if {_lvl} is 3:
					make gui slot 12 with shiny feather named "&e&lSPEED &7(Level 3)" with lore "" and "&fReduce the length of time" and "&fbetween each block mined." and "" and "&cMaximum Upgrade Reached!" 
				if {_lvl} is 1 or 2:
					set {_lvlup} to ({_lvl} + 1)
					set {_cost-speed} to (150 * {_lvl})
					make gui slot 12 with feather named "&e&lSPEED &7(Level %{speed.%{_e}%}%&7)" with lore "" and "&fReduce the length of time" and "&fbetween each block mined." and "" and "&fCost: %{_cost-speed}% Gems" and "&fLvl: %{speed.%{_e}%}% &f➡ %{_lvlup}%" and "" and "&7&o(( Left-Click to upgrade ))":
						if {gems::%{_uuid}%} is greater than or equal to {_cost-speed}:
							remove {_cost-speed} from {gems::%{_uuid}%}	
							play sound "minecraft:entity.villager.work_toolsmith" at volume 4 at pitch 1 to {_p}
							set {speed.%{_e}%} to {_lvlup}
							upgrades({_p}, {_e})
							stop
						else:
							if {gems::%{_uuid}%} is less than {_cost-speed}:
								send "{@tag} &fSorry you don't have enough gems to upgrade!"		
								stop	
			if {_utype} contains "gold":
				if {_lvl} is 0:
					make gui slot 14 with paper named "&e&lGOLD MINER &7(Purchase)" with lore "" and "&fIncrease your chances of" and "&fearning random amounts" and "&fof extra cash time to time!" and "" and "&fCost: 150 Gems" and "&fLvl: %{gold.%{_e}%}% &f➡ 1" and "" and "&7&o(( Left-Click to upgrade ))":
						if {gems::%{_uuid}%} is greater than or equal to 150:
							remove 150 from {gems::%{_uuid}%}
							play sound "minecraft:entity.villager.work_toolsmith" at volume 4 at pitch 1 to {_p}
							set {gold.%{_e}%} to 1
							upgrades({_p}, {_e})
							stop
						else:
							if {gems::%{_uuid}%} is less than 150:
								send "{@tag} &fSorry you don't have enough gems to upgrade!"		
								stop							
				if {_lvl} is 3:
					make gui slot 14 with shiny paper named "&e&lGOLD MINER &7(Level 3)" with lore "" and "&fIncrease your chances of" and "&fearning random amounts" and "&fof extra cash time to time!" and "" and "&cMaximum Upgrade Reached!" 
				if {_lvl} is 1 or 2:
					set {_lvlup} to ({_lvl} + 1)
					set {_cost-gold} to (150 * {_lvl})
					make gui slot 14 with paper named "&e&lGOLD MINER &7(Level %{gold.%{_e}%}%&7)" with lore "" and "&fIncrease your chances of" and "&fearning random amounts" and "&fof extra cash time to time!" and "" and "&fCost: %{_cost-gold}% Gems" and "&fLvl: %{gold.%{_e}%}% &f➡ %{_lvlup}%" and "" and "&7&o(( Left-Click to upgrade ))":					
						if {gems::%{_uuid}%} is greater than or equal to {_cost-gold}:
							remove {_cost-gold} from {gems::%{_uuid}%}
							play sound "minecraft:entity.villager.work_toolsmith" at volume 4 at pitch 1 to {_p}
							set {gold.%{_e}%} to {_lvlup}
							upgrades({_p}, {_e})
							stop	
						else:
							if {gems::%{_uuid}%} is less than {_cost-gold}:
								send "{@tag} &fSorry you don't have enough gems to upgrade!"		
								stop										
			if {_utype} contains "luck":
				if {_lvl} is 0:
					make gui slot 16 with gold ingot named "&e&lLUCK &7(Purchase)" with lore "" and "&fIncrease your chances of" and "&freceiving ores instead of" and "&fordinary cobblestone." and "" and "&fCost: 150 Gems" and "&fLvl: %{luck.%{_e}%}% &f➡ 1" and "" and "&7&o(( Left-Click to upgrade ))":
						if {gems::%{_uuid}%} is greater than or equal to 150:
							remove 150 from {gems::%{_uuid}%}
							play sound "minecraft:entity.villager.work_toolsmith" at volume 4 at pitch 1 to {_p}
							set {luck.%{_e}%} to 1
							upgrades({_p}, {_e})
							stop	
						else:
							if {gems::%{_uuid}%} is less than 150:
								send "{@tag} &fSorry you don't have enough gems to upgrade!"		
								stop
				if {_lvl} is 3:
					make gui slot 16 with shiny gold ingot named "&e&lLUCK &7(Level 3)" with lore "" and "&fIncrease your chances of" and "&freceiving ores instead of" and "&fordinary cobblestone." and "" and "&cMaximum Upgrade Reached!" 
				if {_lvl} is 1 or 2:
					set {_lvlup} to ({_lvl} + 1)
					set {_cost-luck} to (150 * {_lvl})
					make gui slot 16 with gold ingot named "&e&lLUCK &7(Level %{luck.%{_e}%}%&7)" with lore "" and "&fIncrease your chances of" and "&freceiving ores instead of" and "&fordinary cobblestone." and "" and "&fCost: %{_cost-luck}% Gems" and "&fLvl: %{luck.%{_e}%}% &f➡ %{_lvlup}%" and "" and "&7&o(( Left-Click to upgrade ))":					
						if {gems::%{_uuid}%} is greater than or equal to {_cost-luck}:
							remove {_cost-luck} from {gems::%{_uuid}%}
							play sound "minecraft:entity.villager.work_toolsmith" at volume 4 at pitch 1 to {_p}
							set {luck.%{_e}%} to {_lvlup}
							upgrades({_p}, {_e})
							stop
						else:
							if {gems::%{_uuid}%} is less than {_cost-luck}:
								send "{@tag} &fSorry you don't have enough gems to upgrade!"		
								stop	
		#if {_mtype} is "famer":
		#	if {_utype} contains "fortune":
		#		if {_lvl} is 0:
		#			make gui slot 10 with diamond hoe without nbt named "&e&lUPGRADE FORTUNE" with lore "" and "&7Increase your chances of" and "&7ores" and "" and "&e&lFORTUNE &7» &f&l0" and "" and "&a&l$x":
		#				play sound "minecraft:entity.villager.work_toolsmith" at volume 4 at pitch 1 to {_p}
		#				set {_fortune} to 1
		#				replace all "Fortune " with "" in {_fortune}						
		#				enchant tool of {_e} with "fortune 1" parsed as enchantment type
		#				set {fortune.%{_e}%} to 1
		#				upgrades({_p}, {_e})
		#				stop		
		#		if {_lvl} is 3:
		#			make gui slot 10 with shiny diamond hoe without nbt named "&e&lUPGRADE FORTUNE" with lore "" and "&7Increase your chances of" and "&7ores" and "" and "&e&lFORTUNE &7» &f&l%{fortune.%{_e}%}%" and "" and "&c&lMAX" 
		#		else:
		#			set {_lvlup} to ({_lvl} + 1)
		#			make gui slot 10 with diamond hoe without nbt named "&e&lUPGRADE FORTUNE" with lore "" and "&7Increase your chances of" and "&7ores" and "" and "&e&lFORTUNE &7» &f&l%{fortune.%{_e}%}%" and "" and "&a&l$x":						
		#				play sound "minecraft:entity.villager.work_toolsmith" at volume 4 at pitch 1 to {_p}
		#				enchant tool of {_e} with "fortune %{_lvlup}%" parsed as enchantment type
		#				set {fortune.%{_e}%} to {_lvlup}
		#				upgrades({_p}, {_e})
		#				stop		
		#	if {_utype} contains "soil":
		#		if {_lvl} is 0:
		#			make gui slot 12 with farmland named "&e&lSOIL" with lore "" and "&7Reduces Robot's mining times" and "" and "&e&lSOIL &7» &f&l%{speed.%{_e}%}%" and "" and "&a&l$x":
		#				play sound "minecraft:entity.villager.work_toolsmith" at volume 4 at pitch 1 to {_p}
		#				set {speed.%{_e}%} to 1
		#				upgrades({_p}, {_e})
		#				stop
		#		if {_lvl} is 3:
		#			make gui slot 12 with shiny farmland named "&e&lSOIL" with lore "" and "&7Reduces Robot's mining times" and "" and "&e&lSOIL &7» &f&l%{speed.%{_e}%}%" and "" and "&c&lMAX" 
		#		else:
		#			set {_lvlup} to ({_lvl} + 1)
		#			make gui slot 12 with farmland named "&e&lSOIL" with lore "" and "&7Reduces Robot's mining times" and "" and "&e&lSOIL &7» &f&l%{speed.%{_e}%}%" and "" and "&a&l$x":					
		#				play sound "minecraft:entity.villager.work_toolsmith" at volume 4 at pitch 1 to {_p}
		#				set {speed.%{_e}%} to {_lvlup}
		#				upgrades({_p}, {_e})
		#				stop
function upgrades(p:player, e:entity):
	create a gui with id "%{_p}%" with virtual chest inventory with 3 rows named "Upgrades":
		if {type.%{_e}%} is "MINER":
			if {fortune.%{_e}%} isn't set:
				set {fortune.%{_e}%} to 0
			if {speed.%{_e}%} isn't set:
				set {speed.%{_e}%} to 0
			if {gold.%{_e}%} isn't set:
				set {gold.%{_e}%} to 0
			if {luck.%{_e}%} isn't set:
				set {luck.%{_e}%} to 0
			upgradeapply({_p}, {_e}, "miner", "fortune", {fortune.%{_e}%}, "%{_p}%")
			upgradeapply({_p}, {_e}, "miner", "speed", {speed.%{_e}%}, "%{_p}%")
			upgradeapply({_p}, {_e}, "miner", "gold", {gold.%{_e}%}, "%{_p}%")
			upgradeapply({_p}, {_e}, "miner", "luck", {luck.%{_e}%}, "%{_p}%")
			make gui slot 11 and 13 and 15 with light gray glass pane named "&7" 
			make gui slot 0 and 1 and 2 and 3 and 4 and 5 and 6 and 7 and 8 and 9 and 17 and 18 and 19 and 20 and 21 and 23 and 24 and 25 and 26 with {colorg.%{_e}%} named "&0" 
			back(22, {_p}, barrier, "&cMain Menu", {_e}, "%{_p}%")
	open gui last gui to {_p}
		#if {type.%{_e}%} is "FARMER":
		#	upgradeapply({_p}, {_e}, "famer", "fortune", {fortune.%{_e}%})
		#	upgradeapply({_p}, {_e}, "famer", "soil", {speed.%{_e}%})
		#	make gui slot 11 and 13 and 15 with light gray glass pane named "&7" 
		#	make gui slot 0 and 1 and 2 and 3 and 4 and 5 and 6 and 7 and 8 and 9 and 17 and 18 and 19 and 20 and 21 and 23 and 24 and 25 and 26 with {colorg.%{_e}%} named "&0" 
		#	back(22, {_p}, barrier, "&cMain Menu", {_e}, "Robot/Upgrade")

#
# Back button function
#

function back(s: number, p:player, i:item, n:text, e:entity, gui:text):
	edit gui with id "%{_gui}%":
		make gui slot {_s} with {_i} named "%{_n}%":
			openmainmenu({_p}, {_e})

