options:
	crates-loc: 341.5, 158, 70.5
	tag: &e&lSKYBLOCK &7Â¬&f 
	world: ul_spawn

every second:
  loop all players:
    add 1 to {seconds::%loop-player's uuid%}
    playtime(loop-player)
    if {seconds::%loop-player's uuid%} > 59:
      remove 60 from {seconds::%loop-player's uuid%} 
      add 1 to {minutes::%loop-player's uuid%}
      playtime(loop-player)
    if {minutes::%loop-player's uuid%} > 59:
      remove 60 from {minutes::%loop-player's uuid%}
      add 1 to {hours::%loop-player's uuid%}
      playtime(loop-player)
    if {hours::%loop-player's uuid%} > 23:
      remove 24 from {hours::%loop-player's uuid%}
      add 1 to {days::%loop-player's uuid%}
      playtime(loop-player)

function playtime(p:player):
	set {_uuid} to uuid of {_p}
	set {d} to "d"
	set {h} to "h"
	set {m} to "m"
	set {s} to "s"
	if {days::%{_uuid}%} is set:
		set {playtime::%{_p}%} to "%{days::%{_uuid}%}%%{d}% %{hours::%{_uuid}%}%%{h}% %{minutes::%{_uuid}%}%%{m}% %{seconds::%{_uuid}%}%%{s}%"
	else:
		if {hours::%{_uuid}%} is set:
			set {playtime::%{_p}%} to "%{hours::%{_uuid}%}%%{h}% %{minutes::%{_uuid}%}%%{m}% %{seconds::%{_uuid}%}%%{s}%"
		else:
			if {minutes::%{_uuid}%} is set:
				set {playtime::%{_p}%} to "%{minutes::%{_uuid}%}%%{m}% %{seconds::%{_uuid}%}%%{s}%"
			else:
				set {playtime::%{_p}%} to "%{seconds::%{_uuid}%}%%{s}%"

function sort(indices: objects, values: objects, descending: boolean = true) :: strings:
	loop {_indices::*}:
		set {_sort::%{_values::%loop-index%}%.%loop-index%} to loop-value
	return (reversed {_sort::*}) if {_descending} is true, else {_sort::*}

function statuslist(p:player, i:itemtype):
	set {_player} to "%{_p}%" parsed as offline player
	loop {online::*}:
		set {_p2} to "%loop-value%" parsed as offline player
		add colored "%{is.online.%{_p2}%}% &f%{_p2}%" to lore of {_i}
	clear {online::*}
	loop {offline::*}:
		set {_p3} to "%loop-value-1%" parsed as offline player
		add colored "%{is.online.%{_p3}%}% &f%{_p3}%" to lore of {_i}	
	clear {offline::*}


#function captcha(p:player):
#	apply potion of slowness 255 without particles to {_p} for 1 days
#	apply potion of invisibility 1 without particles to {_p} for 1 days
#	set {captcha::%{_p}%} to random integer between 100 and 999
#	send title "&c&lCaptcha" with subtitle "&cType ""%{captcha::%{_p}%}%""" to {_p} for 99 minutes

on anvil prepare:
	if slot 0 of event-inventory is a spawner:
		wait 2 ticks
		set {_i} to slot 0 of event-inventory
		set slot 0 of event-inventory to air
		give event-player {_i}
	else if slot 0 of event-inventory is a silverfish spawn egg:
		wait 2 ticks
		set {_i} to slot 0 of event-inventory
		set slot 0 of event-inventory to air
		give event-player {_i}
	else if slot 0 of event-inventory is a name tag:
		wait 2 ticks
		set {_i} to slot 0 of event-inventory
		set slot 0 of event-inventory to air
		give event-player {_i}
	else if slot 0 of event-inventory is a tripwire hook:
		wait 2 ticks
		set {_i} to slot 0 of event-inventory
		set slot 0 of event-inventory to air
		give event-player {_i}
	else if slot 0 of event-inventory is a sign:
		wait 2 ticks
		set {_i} to slot 0 of event-inventory
		set slot 0 of event-inventory to air
		give event-player {_i}

function initilizePlayer(p: player):
	set {_uuid} to uuid of {_p}
	#delete {captcha::%{_p}%}
	if {joins} isn't set:
		set {joins} to 0
	add 1 to {joins}
	add {_uuid} to {Joins::*}
	make {_p} execute "/spawn"
	send "{@tag} %{_p}% has joined for the first time! &f(&7##%{joins}%&f)" to all players
	#apply potion of slowness 1 without particles to {_p} for 1 second
	#apply potion of invisibility 1 without particles to {_p} for 1 second
	#bossbar("logon", {_p})

on command "/rprevent":
	cancel event

command bossbar [<text>]:
	trigger:
		set {_uuid} to uuid of player
		if arg-1 is "enable" or "on":
			set {bossbar::%{_uuid}%} to true
			send "{@tag} Bossbar enabled"
		if arg-1 is "disable" or "off":
			set {bossbar::%{_uuid}%} to false
			send "{@tag} Bossbar disabled"

function bossbar(t:text, p:player):
	set {_uuid} to uuid of {_p}
	if {bossbar::%{_uuid}%} isn't set:
		set {bossbar::%{_uuid}%} to true
	if {bossbar.running::%{_uuid}%} isn't set:
		set {bossbar.running::%{_uuid}%} to false
	if {bossbar::%{_uuid}%} is true:
		#if {_t} is "logon":
		#	if {bossbar.running::%{_uuid}%} is false: 
		#		set {bossbar.running::%{_uuid}%} to true
		#		create bossbar titled "&e&lWELCOME BACK TO PREMIUMS" and id "%{_p}%" for {_p} with progress 0 with colors white
		#		set {_index} to 1
		#		wait 2 seconds
		#		loop 46 times:
		#			loop 100 times:
		#				set {_progress} to value of bossbar "%{_p}%"
		#				add 2.3 to {_progress}
		#			if {_index} is 1:
		#				edit bossbar "%{_p}%" title to "&6&lW&e&lELCOME BACK TO PREMIUMS"
		#			if {_index} is 2:	
		#				edit bossbar "%{_p}%" title to "&f&lW&6&lE&e&lLCOME BACK TO PREMIUMS"
		#			if {_index} is 3:
		#				edit bossbar "%{_p}%" title to "&f&lWE&6&lL&e&lCOME BACK TO PREMIUMS"
		#			if {_index} is 4:
		#				edit bossbar "%{_p}%" title to "&f&lWEL&6&lC&e&lOME BACK TO PREMIUMS"
		#			if {_index} is 5:
		#				edit bossbar "%{_p}%" title to "&f&lWELC&6&lO&e&lME BACK TO PREMIUMS"
		#			if {_index} is 6:
		#				edit bossbar "%{_p}%" title to "&f&lWELCO&6&lM&e&lE BACK TO PREMIUMS"
		#			if {_index} is 7:
		#				edit bossbar "%{_p}%" title to "&f&lWELCOM&6&lE&e&l BACK TO PREMIUMS"
		#			if {_index} is 8:
		#				edit bossbar "%{_p}%" title to "&f&lWELCOME &6&lB&e&lACK TO PREMIUMS"
		#			if {_index} is 9:
		#				edit bossbar "%{_p}%" title to "&f&lWELCOME B&6&lA&e&lCK TO PREMIUMS"
		#			if {_index} is 10:
		#				edit bossbar "%{_p}%" title to "&f&lWELCOME BA&6&lC&e&lK TO PREMIUMS"
		#			if {_index} is 11:
		#				edit bossbar "%{_p}%" title to "&f&lWELCOME BAC&6&lK&e&l TO PREMIUMS"
		#			if {_index} is 12:
		#				edit bossbar "%{_p}%" title to "&f&lWELCOME BACK &6&lT&e&lO PREMIUMS"
		#			if {_index} is 13:
		#				edit bossbar "%{_p}%" title to "&f&lWELCOME BACK T&6&lO&e&l PREMIUMS"
		#			if {_index} is 14:
		#				edit bossbar "%{_p}%" title to "&f&lWELCOME BACK TO &6&lP&e&lREMIUMS"
		#			if {_index} is 15:
		#				edit bossbar "%{_p}%" title to "&f&lWELCOME BACK TO P&6&lR&e&lEMIUMS"
		#			if {_index} is 16:
		#				edit bossbar "%{_p}%" title to "&f&lWELCOME BACK TO PR&6&lE&e&lMIUMS"
		#			if {_index} is 17:
		#				edit bossbar "%{_p}%" title to "&f&lWELCOME BACK TO PRE&6&lM&e&lIUMS"
		#			if {_index} is 18:
		#				edit bossbar "%{_p}%" title to "&f&lWELCOME BACK TO PREM&6&lI&e&lUMS"
		#			if {_index} is 19:
		#				edit bossbar "%{_p}%" title to "&f&lWELCOME BACK TO PREMI&6&lU&e&lMS"
		#			if {_index} is 20:
		#				edit bossbar "%{_p}%" title to "&f&lWELCOME BACK TO PREMIU&6&lM&e&lS"
		#			if {_index} is 21:
		#				edit bossbar "%{_p}%" title to "&f&lWELCOME BACK TO PREMIUM&6&lS&e&l"
		#			if {_index} is 22:
		#				edit bossbar "%{_p}%" title to "&f&lWELCOME BACK TO PREMIUMS&6&l&e&l"
		#			if {_index} is 23:
		#				edit bossbar "%{_p}%" title to "&f&lWELCOME BACK TO PREMIUMS&6&l&e&l"
		#			if {_index} is 24:
		#				edit bossbar "%{_p}%" title to "&f&lWELCOME BACK TO PREMIU&6&lM&e&lS"
		#			if {_index} is 25:
		#				edit bossbar "%{_p}%" title to "&f&lWELCOME BACK TO PREMI&6&lU&e&lMS"
		#			if {_index} is 26:
		#				edit bossbar "%{_p}%" title to "&f&lWELCOME BACK TO PREM&6&lI&e&lUMS"
		#			if {_index} is 27:
		#				edit bossbar "%{_p}%" title to "&f&lWELCOME BACK TO PRE&6&lM&e&lIUMS"
		#			if {_index} is 28:
		#				edit bossbar "%{_p}%" title to "&f&lWELCOME BACK TO PR&6&lE&e&lMIUMS"
		#			if {_index} is 29:
		#				edit bossbar "%{_p}%" title to "&f&lWELCOME BACK TO P&6&lR&e&lEMIUMS"
		#			if {_index} is 30:
		#				edit bossbar "%{_p}%" title to "&f&lWELCOME BACK TO &6&lP&e&lREMIUMS"
		#			if {_index} is 31:
		#				edit bossbar "%{_p}%" title to "&f&lWELCOME BACK T&6&lO&e&l PREMIUMS"
		#			if {_index} is 32:
		#				edit bossbar "%{_p}%" title to "&f&lWELCOME BACK &6&lT&e&lO PREMIUMS"
		#			if {_index} is 33:
		#				edit bossbar "%{_p}%" title to "&f&lWELCOME BAC&6&lK&e&l TO PREMIUMS"
		#			if {_index} is 34:
		#				edit bossbar "%{_p}%" title to "&f&lWELCOME BA&6&lC&e&lK TO PREMIUMS"
		#			if {_index} is 35:
		#				edit bossbar "%{_p}%" title to "&f&lWELCOME B&6&lA&e&lCK TO PREMIUMS"
		#			if {_index} is 36:
		#				edit bossbar "%{_p}%" title to "&f&lWELCOME &6&lB&e&lACK TO PREMIUMS"
		#			if {_index} is 37:
		#				edit bossbar "%{_p}%" title to "&f&lWELCOM&6&lE&e&l BACK TO PREMIUMS"
		#			if {_index} is 38:
		#				edit bossbar "%{_p}%" title to "&f&lWELCO&6&lM&e&lE BACK TO PREMIUMS"
		#			if {_index} is 39:
		#				edit bossbar "%{_p}%" title to "&f&lWELC&6&lO&e&lME BACK TO PREMIUMS"
		#			if {_index} is 40:
		#				edit bossbar "%{_p}%" title to "&f&lWEL&6&lC&e&lOME BACK TO PREMIUMS"
		#			if {_index} is 41:
		#				edit bossbar "%{_p}%" title to "&f&lWE&6&lL&e&lCOME BACK TO PREMIUMS"
		#			if {_index} is 42:
		#				edit bossbar "%{_p}%" title to "&f&lW&6&lE&e&lLCOME BACK TO PREMIUMS"
		#			if {_index} is 43:
		#				edit bossbar "%{_p}%" title to "&6&lW&e&lELCOME BACK TO PREMIUMS"
		#			if {_index} is 44:
		#				edit bossbar "%{_p}%" title to "&e&lWELCOME BACK TO PREMIUMS"
		#			if {_index} is 45:
		#				edit bossbar "%{_p}%" title to "&e&lWELCOME BACK TO PREMIUMS"
		#			if {_index} is 46:
		#				edit bossbar "%{_p}%" title to "&e&lWELCOME BACK TO PREMIUMS"
		#			wait 0.1 seconds 	
		#			set bossbar "%{_p}%" value to {_progress}	
		#			add 1 to {_index}
		#		wait 2 seconds
		#		if {island.owner::%{_p}%} isn't set:
		#			set {_progress} to 0
		#			set {_index} to 0
		#			edit bossbar "%{_p}%" title to "&eTo begin do /start"
		#			loop 100 times:
		#				add 1 to {_progress}
		#				add 1 to {_index}
		#				set bossbar "%{_p}%" value to {_progress}	
		#				wait 0.2 seconds
		#			wait 2 seconds
		#			if {hours::%{_uuid}%} isn't set:
		#				if {minutes::%{_uuid}%} is less than 10:
		#					add "Tip 1" to {_o::*}
		#					add "Tip 2" to {_o::*}
		#					add "Tip 3" to {_o::*}
		#					add "Tip 4" to {_o::*}
		#					add "Tip 5" to {_o::*}
		#					add "Tip 6" to {_o::*}
		#					add "Tip 7" to {_o::*}	
		#					loop 2 times:
		#						set {_progress} to 0
		#						set {_tip} to random string out of {_o::*}	
		#						edit bossbar "%{_p}%" title to "&e%{_tip}%"
		#						loop 10 times:
		#							add 10 to {_progress}
		#							set bossbar "%{_p}%" value to {_progress}	
		#							wait 1 second
		#					wait 2 seconds
		#		remove bossbar "%{_p}%"
		#		set {bossbar.running::%{_uuid}%} to false
		if {_t} is "clearlag":
			if {bossbar.running::%{_uuid}%} is false: 
				set {bossbar.running::%{_uuid}%} to true
				create bossbar titled "&fAll Entities Cleared in 10 seconds" and id "%{_p}%" for {_p} with progress 100 with colors red
				wait 2 seconds
				loop 10 times:
					set {_progress} to value of bossbar "%{_p}%"
					remove 10 from {_progress}
					set {_string} to "%{_progress}%"
					set {_color} to true
					set {_sec} to the first character of {_string}
					if {_sec} is "1":
						edit bossbar "%{_p}%" title to "&fAll Entities Cleared in %{_sec}% second"
					if {_sec} isn't "1" or "-":
						edit bossbar "%{_p}%" title to "&fAll Entities Cleared in %{_sec}% seconds"
					if {_sec} is "-":
						set {_kill::*} to all entities where [input's name is set]
						set {_kill} to "%amount of {_kill::*} - number of online players%"
						make console execute "/killall mobs ul_islands"
						make console execute "/killall drops ul_islands"
						make console execute "/killall irongolem"
						edit bossbar "%{_p}%" title to "&fAll Entities Cleared"
					if {_color} is true:
						edit bossbar "%{_p}%" color to white
						wait 0.2 seconds
						edit bossbar "%{_p}%" color to red
						wait 0.2 seconds
						edit bossbar "%{_p}%" color to white
						wait 0.2 seconds
						edit bossbar "%{_p}%" color to red	
					set bossbar "%{_p}%" value to {_progress}
					wait 1 second
				wait 1 second
				remove bossbar "%{_p}%"
				set {bossbar.running::%{_uuid}%} to false


#every 4 seconds in world "{@world}":
#	loop all players:
#		if {captcha::%loop-player%} is set:
#			send title "&c&lCaptcha" with subtitle "&cType ""%{captcha::%loop-player%}%""" to loop-player

command start:
    trigger:
        make player execute command "/is"


on first join:
	set {_players::*} to all players
	set {_playercount} to size of {_players::*}
	set join message to ""
	set {_p} to player
	set {_uuid} to uuid of {_p}
	set {balance::%{_uuid}%} to 0
	set {gems::%{_uuid}%} to 0
	#captcha({_p})
	set join message to ""
	wait 5 ticks
	teleport {_p} to {spawn}
	set {joined.date.%{_uuid}%} to now
	set {chatcolor::%{_p}%} to "&7"
	initilizePlayer(player)
	#set {proxy.all.playercaptcha::%{_uuid}%} to false
	set {reaction.solved::%{_uuid}%} to 0
	set variable "skyblock.playercount" in channel "hub" to {_playercount}
	send redis message "&7Player Count: &3%{skyblock.playercount}%" to channel "hub"
	#make player execute "/captcha"

	
on join:
	set {_players::*} to all players
	set {_playercount} to size of {_players::*}
	set {_uuid} to uuid of player
	set {is.online.%player%} to " &aâ"
	if {joined.date.%{_uuid}%} isn't set:
		set {joined.date.%{_uuid}%} to now
	if {captcha::%player%} is set:
		set join message to ""
		#captcha(player)
		stop
	if {balance::%{_uuid}%} isn't set:
		set {balance::%{_uuid}%} to 0
	if {gems::%{_uuid}%} isn't set:
		set {gems::%{_uuid}%} to 0
	if player has permission "premiums.staffjoin":
		set join message to "&e[Staff] &7%player% joined."
	else if player has permission "premiums.donorjoin":
		set join message to "&6[Donator] &7%player% joined."
	else:
		set join message to "&7%player% joined."
	set variable "skyblock.playercount" in channel "hub" to {_playercount}
	send redis message "&7Player Count: &3%{skyblock.playercount}%" to channel "hub"
	#bossbar("logon", player)
	#if {proxy.all.playercaptcha::%{_uuid}%} isn't set:
	#	set {proxy.all.playercaptcha::%{_uuid}%} to false
	#if {proxy.all.playercaptcha::%{_uuid}%} is false:
	#	make player execute "/captcha"

on quit:
	set {_players::*} to all players
	remove player from {_players::*}
	set {is.online.%player%} to " &câ"	
	if player has permission "premiums.staffjoin":
		set quit message to "&e[Staff] &7%player% left."
	else:
		set quit message to "&7%player% left."
	if {captcha::%player%} is set:
		set quit message to ""
	set {_playercount} to size of {_players::*}
	set variable "skyblock.playercount" in channel "hub" to {_playercount}
	send redis message "&7Player Count: &3%{skyblock.playercount}%" to channel "hub"

every second:
	set {sb_player_count} to placeholder "%%bungee_sbP1%%"
	set {hub1_player_count} to placeholder "%%bungee_hubP1%%"
	set {hub2_player_count} to placeholder "%%bungee_hubP2%%"
	set {gens_player_count} to placeholder "%%bungee_gensP1%%" 
	set {network_player_count} to placeholder "%%bungee_total%%"

#command /captcha:
#	trigger:
#		set {_uuid} to uuid of player
#		if {proxy.all.playercaptcha::%{_uuid}%} is false:
#			create a gui with id "Captcha" with virtual chest inventory with 4 rows named "&e&l           CAPTCHA":
#				make gui slot 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34 and 35 with gray stained glass pane named "&a"
#				set {_int1} to random integer between 0 and 5
#				set {_int2} to random integer between 9 and 14
#				set {_int3} to random integer between 19 and 29
#				set {_int4} to random integer between 30 and 35
#				set {captcha.%{_uuid}%} to 0
#				make gui slot {_int1} with lime stained glass pane named "&aClick here!":
#					make gui slot {_int1} with black stained glass pane named "&a"
#					add 1 to {captcha.%{_uuid}%}
#					if {captcha.%{_uuid}%} is 4:	
#						message "&aYou completed captcha! You can now connect to our servers!" to player
#						delete {captcha.%{_uuid}%}
#						set {_pass} to true
#						close inventory for player
#						send "ALL->set_proxy.all.playercaptcha::%{_uuid}%_true" to channel with id "908150654864875541"
#				make gui slot {_int2} with lime stained glass pane named "&aClick here!":
#					make gui slot {_int2} with black stained glass pane named "&a"
#					add 1 to {captcha.%{_uuid}%}
#					if {captcha.%{_uuid}%} is 4:	
#						message "&aYou completed captcha! You can now connect to our servers!" to player
#						delete {captcha.%{_uuid}%}
#						set {_pass} to true
#						close inventory for player
#						send "ALL->set_proxy.all.playercaptcha::%{_uuid}%_true" to channel with id "908150654864875541"
#				make gui slot {_int3} with lime stained glass pane named "&aClick here!":
#					make gui slot {_int3} with black stained glass pane named "&a"
#					add 1 to {captcha.%{_uuid}%}
#					if {captcha.%{_uuid}%} is 4:	
#						message "&aYou completed captcha! You can now connect to our servers!" to player
#						delete {captcha.%{_uuid}%}
#						set {_pass} to true
#						close inventory for player
#						send "ALL->set_proxy.all.playercaptcha::%{_uuid}%_true" to channel with id "908150654864875541"
#				make gui slot {_int4} with lime stained glass pane named "&aClick here!":
#					make gui slot {_int4} with black stained glass pane named "&a"
#					add 1 to {captcha.%{_uuid}%}
#					if {captcha.%{_uuid}%} is 4:	
#						message "&aYou completed captcha! You can now connect to our servers!" to player
#						delete {captcha.%{_uuid}%}
#						set {_pass} to true
#						close inventory for player
#						send "ALL->set_proxy.all.playercaptcha::%{_uuid}%_true" to channel with id "908150654864875541"
#				run on gui close:
#					if {_pass} is false:
#						message "&cYou cannot yet connect to our servers! Please complete the one-time captcha first." to player
#						initilizePlayer(player)
#						make player execute "/network"
#			open the last gui for the player

command network:
	trigger:
		if {hub1_player_count} = 20:
			make player execute "/queue hubP1"
		if {hub1_player_count} = 20:
			if {hub2_player_count} < 20:
				make player execute "/queue hubP2"
			else:
				kick player
		else:
			make player execute "/queue hubP1"

command /spawn [<offlineplayer>]:
	trigger:
		if arg 1 is not set:
			teleport player to {spawn}
			send "{@tag} You have been teleported to spawn." to player
			loop all entities where [input is an armor stand]:
				dostuff(player, loop-entity, "disable")
			clear {bound.leave.%player%}
			wait 10 ticks
			if player has permission "premiums.admin":
				set the player's gamemode to creative
		else if arg 1 is online:
			if player has permission "premiums.spawnppl":
				teleport arg-1 to {spawn}
				send "{@tag} You have been teleported to spawn." to arg-1
				send "{@tag} %arg-1% has been teleported to spawn." to player
				loop all entities where [input is an armor stand]:
					dostuff(arg-1, loop-entity, "disable")   
				clear {bound.leave.%player%}  
				wait 10 ticks
				if arg-1 has permission "premiums.admin":
					set the player's gamemode to creative
			else:
				send "{@tag} You do not have permission to use this command." to player

command /spawnbypass:
	permission: premiums.admin
	trigger:
		if {spawn.bypass.%player's uuid%} isn't set:
			set {spawn.bypass.%player's uuid%} to true
			message "{@tag} Spawn bypass enabled."
		else:
			clear {spawn.bypass.%player's uuid%}
			message "{@tag} Spawn bypass disabled."

command /tp [<offlineplayer>]:
	permission: premiums.tp
	permission message: {@tag}You don't have permission do to this!
	trigger:
		if arg-1 is a player:
			if arg-1 is online:
				if arg-1's world = "ul_islands":
					set {bound.%player%} to bound from id "%{island.owner::%arg-1%}%"
					set {bound.center::%player%} to {island.origin::%{island.owner::%arg-1%}%}
					set {bound.leave.%player%} to arg-1 
					teleport player to arg-1
					send "{@tag} Teleported you to %arg-1%" to player
					wait 10 ticks
					if player has permission "premiums.admin":
						set the player's gamemode to creative
				else:
					teleport player to arg-1
					send "{@tag} Teleported you to %arg-1%" to player
					clear {bound.leave.%player%}	
					wait 10 ticks
					if player has permission "premiums.admin":
						set the player's gamemode to creative


command /tphere [<offlineplayer>]:
	permission: premiums.tp
	permission message: {@tag}You don't have permission do to this!
	trigger:
		if arg-1 is a player:
			if arg-1 is online:	
				if player's world = "ul_islands":
					set {bound.%arg-1%} to bound from id "%{island.owner::%player%}%"
					set {bound.center::%arg-1%} to {island.origin::%{island.owner::%player%}%}
					set {bound.leave.%arg-1%} to player 
					teleport arg-1 to player
					send "{@tag} Teleported %arg-1% to you." to player
					send "{@tag} Teleported you to %player%." to arg-1
				else:
					teleport arg-1 to player
					send "{@tag} Teleported %arg-1% to you." to player
					send "{@tag} Teleported you to %player%." to arg-1	
					clear {bound.leave.%arg-1%}				

#command /tpa [<offlineplayer>] [<text>]:
#	trigger:
#		if arg-1 is set:
#			if arg-1 is online:
#				if {island.owner::%arg-1%} is set:
#					if arg-2 isn't set:
#						set {tpa.request.%player%::%arg-1%} to false
#						send "{@tag} %player% want to teleport to you!" to arg-1
#						send formatted "{@tag} <tooltip:><run command:/tpa %player% accept>&a&lACCEPT<reset> <tooltip:><run command:/tpa %player% deny>&c&lDENY<reset>" to arg-1
#						send "{@tag} Request sent!" to player
#						stop				
#		if arg-1 is set:
#			if arg-1 is online:
#				if arg-2 is "accept":
#					if {island.lock::%{island.owner::%arg-1%}%} is 0:
#						if {tpa.request.%arg-1%::%player%} is true:
#							send "{@tag} %arg-1% has already accepted!"
#							stop
#						if {tpa.request.%arg-1%::%player%} isn't set:
#							send "{@tag} You already denied the TPA request!"
#							stop						
#						else:
#							if arg-1's world = "ul_islands":
#								set {tpa.request.%arg-1%::%player%} to true
#								set {bound.%arg-1%} to bound from id "%{island.owner::%player%}%"
#								set {bound.center::%arg-1%} to {island.origin::%{island.owner::%player%}%}
#								teleport arg-1 to player
#								send "{@tag} Teleported %arg-1% to you." to player	
#								send "{@tag} Teleported you to %player%" to arg-1
#								stop
#							if arg-1's world != "ul_islands":
#								teleport arg-1 to player	
#								send "{@tag} Teleported %arg-1% to you." to player
#								send "{@tag} Teleported you to %player%." to arg-1
#								stop
#					else:
#						send "{@tag} This island is locked!"
#				if arg-2 is "deny":
#					if {tpa.request.%arg-1%::%player%} is true:
#						send "{@tag} %arg-1% has already accepted!"
#						stop
#					if {tpa.request.%arg-1%::%player%} isn't set:
#						stop
#					else:					
#						send "{@tag} Request denied." to player
#						send "{@tag} %player% denied the TPA request." to arg-1
#						clear {tpa.request.%arg-1%::%player%}
#						stop
#
command /warp [<text>] [<text>]:
	trigger:
		if arg-1 is "setwarp":
			if player has permission "premiums.setupwarp":
				if arg-2 is set:
					if arg-2 is "crates":
						set {_loc} to location({@crates-loc}, world "{@world}")
						set yaw of {_loc} to 179.9
						set pitch of {_loc} to -1.5
						set {_warp.name} to arg-2
						add {_warp.name} to {warps::*}
						set {warp::%arg-2%} to {_loc}
						send "{@tag} %arg-2% warp is now set!"						
				else:
					set {_loc} to player's location
					set yaw of {_loc} to 89
					set pitch of {_loc} to 0.9						
					set {_warp.name} to arg-2
					add {_warp.name} to {warps::*}
					set {warp::%arg-2%} to {_loc}
					send "{@tag} %arg-2% warp is now set!"
		if arg-1 is set:
			teleport player to {warp::%arg-1%}
		if arg-1 is "delete":
			if player has permission "premiums.setupwarp":
				if arg-2 is set:
					delete {warp::%arg-2%}
					remove arg-2 from {warps::*}
					send "{@tag} %arg-2% warp is now deleted!"

command /setspawn:
	trigger:
		if player has permission "premiums.setspawn":
			set {spawn} to player's location
			send "{@tag} New spawn location has been set." to player

command /forcecasino:
    permission: premiums.casino.reset
    permission message: {@tag}You have no permission!
    trigger:
        set {casino.stock::beer} to 25
        set {casino.stock::wine} to 25
        set {casino.stock::vodka} to 25
        set {casino.stock::gin} to 25
        set {casino.stock::rum} to 25
        broadcast "{@tag} The casino has been forcefully restocked by %player%!"

on right click on player head:
    if event-block's location is location(18.5, 119.5, 22.5, player's world):
        wait 3 ticks
        message "&6&lSTORE &7Â¬ &f<link:https://premiums.tebex.io/>https://premiums.tebex.io/"
        stop
    if event-block's location is location(24.5, 119.5, 22.5, player's world):
        wait 3 ticks
        message "&b&lDISCORD &7Â¬ &f<link:https://discord.premiumsmc.net/>https://discord.premiumsmc.net/"
        stop

command /discord:
	trigger:
		message "&b&lDISCORD &7Â¬ &f<link:https://discord.premiumsmc.net/>https://discord.premiumsmc.net/" to player

every 290 seconds:
	loop all players:
		if loop-player's world = "ul_islands":
			bossbar("clearlag", loop-player)

command /clearlag:
	trigger:
		if player has permission "premiums.clearlag":
			loop all players:
				if loop-player's world = "ul_islands":
					bossbar("clearlag", loop-player)
	
#
#on command:
#	if "%full command%" contains "skript reload" or "sk reload":
#		if sender has permission "premiums.admin":
#			loop all players:
#				send title "&c&lSKRIPT RELOADING" with subtitle "&cPrepare for lag!" to loop-player for 1 seconds
#			set {_cmd} to "%full command%"
#			cancel event
#			wait 3 seconds
#			make console execute "/%{_cmd}%"

#command /bossbar2:
#	trigger:
#		bossbar("logon", player)
		#create bossbar titled "&a&lWelcome to Minecraft, &e&l%player%&a&l!" and id "welcome%player%" for player with progress 100 with colors green
#every 5 ticks:
#	loop all players:
#		loop all items in loop-player's inventory:
#			set {_lore} to "%lore of loop-item%"
#			if {_lore} doesn't contain "&f&lCOMMON" or "<##ff930f>&lL<##ffa012>&lE<##ffae19>&lG<##ffbb21>&lE<##ffc72b>&lN<##ffd436>&lD<##ffe041>&lA<##ffed4e>&lR<##fff95b>&lY":
#				if loop-item is dirt:
#					add "" to lore of loop-item
#					add colored "&f&lCOMMON" to lore of loop-item
#				if name of loop-item is "&e&lMINER &e&lROBOT":
#					add "" to lore of loop-item
#					add colored "<##ff930f>&lL<##ffa012>&lE<##ffae19>&lG<##ffbb21>&lE<##ffc72b>&lN<##ffd436>&lD<##ffe041>&lA<##ffed4e>&lR<##fff95b>&lY" to lore of loop-item
#
#on inventory pickup:s
#	wait 1 second
#	if event-item is dirt:
#		loop all items in event-inventory:
#			set {_lore} to "%lore of loop-item%"
#			if {_lore} doesn't contain "&f&lCOMMON" or "<##ff930f>&lL<##ffa012>&lE<##ffae19>&lG<##ffbb21>&lE<##ffc72b>&lN<##ffd436>&lD<##ffe041>&lA<##ffed4e>&lR<##fff95b>&lY":
#				if loop-item is dirt:
#					add "" to lore of loop-item
#					add colored "&f&lCOMMON" to lore of loop-item
#				if name of loop-item is "&e&lMINER &e&lROBOT":
#					add "" to lore of loop-item
#					add colored "<##ff930f>&lL<##ffa012>&lE<##ffae19>&lG<##ffbb21>&lE<##ffc72b>&lN<##ffd436>&lD<##ffe041>&lA<##ffed4e>&lR<##fff95b>&lY" to lore of loop-item

#command /xpbottle [<integer>]:
#	trigger:
#		if arg 1 is not set:
#			message "{@tag} /xpbottle <amount> - Bottles certain amount of levels"
#		else:
#			if arg 1 > 0:
#				if level of player is greater than or equal to arg 1:
#					remove arg 1 from level of player
#					give player 1 experience bottle named "&eExperience Bottle &7(Right Click)" with lore "&eXP &f%arg 1% &fLevels" and "&eSigner &f%player%"
#					play sound "ENTITY_EXPERIENCE_BOTTLE_THROW" with volume 0.5 and pitch 10 to the player
#				else:
#					message "{@tag} You do not have enough levels."
#			else:
#				message "{@tag} /xpbottle <amount> - Bottles certain amount of levels"
#
#on right click with experience bottle:
#	if name of player's tool contains "&eExperience Bottle":
#		cancel event
#		set {_a} to uncolored line 1 of lore of player's tool
#		if {_a} contains "Levels":
#			replace all " Levels" with "" in {_a}
#			replace all "XP " with "" in {_a}
#			set {_amount} to {_a} parsed as integer	
#			add {_amount} to level of player
#			remove 1 of player's tool from player's tool
#			play sound "ENTITY_ARROW_HIT_PLAYER" with volume 0.5 and pitch 0 to the player
#
#command /withdraw [<integer>]:
#	trigger:
#		if arg 1 > 0:
#			if player's balance is greater than arg 1:
#				remove arg 1 from player's balance
#				give player 1 paper named "&6Banknote &7(Right Click)" with lore "&eValue &f$%arg 1%" and "&eSigner &f%player%"
#				play sound "ENTITY_BAT_LOOP" with volume 0.5 and pitch 10 to the player
#			else:
#				message "{@tag} You do not have enough money."
#		else:
#			message "{@tag} /withdraw <amount>"
#
#command /ping [<player>]:
#	trigger:
#		if arg 1 is set:
#			send "&6&l[!] &6%arg-1%&6's ping: &e%arg-1's ping%" to player
#		else:
#			send "&6&l[!] &6Your ping: &e%player's ping%" to player
#
#on right click with paper:
#	if name of player's tool contains "&6Banknote":
#		set {_amount} to uncolored line 1 of lore of player's tool
#		replace all "Value $" with "" in {_amount}
#		add {_amount} parsed as integer to player's balance
#		remove 1 of tool from player's tool
#		play sound "ENTITY_ARROW_HIT_PLAYER" with volume 0.5 and pitch 15 to the player

#command /test:
#	trigger:
#		send "&7  &r &7&mââââââââââââââââââ&f &A&LISLAND BANK ALERT &7&mââââââââââââââââââ" to player
#		send "&7  &r                       &f &A&LISLAND BANK ALERT                       " to player